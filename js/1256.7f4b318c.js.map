{"version":3,"file":"js/1256.7f4b318c.js","mappings":"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","sources":["webpack://@radiantearth/stac-browser/./node_modules/jwt-decode/build/esm/index.js","webpack://@radiantearth/stac-browser/./node_modules/oidc-client-ts/dist/esm/oidc-client-ts.js","webpack://@radiantearth/stac-browser/./src/auth/oidc.js"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","// src/utils/Logger.ts\nvar nopLogger = {\n  debug: () => void 0,\n  info: () => void 0,\n  warn: () => void 0,\n  error: () => void 0\n};\nvar level;\nvar logger;\nvar Log = /* @__PURE__ */ ((Log2) => {\n  Log2[Log2[\"NONE\"] = 0] = \"NONE\";\n  Log2[Log2[\"ERROR\"] = 1] = \"ERROR\";\n  Log2[Log2[\"WARN\"] = 2] = \"WARN\";\n  Log2[Log2[\"INFO\"] = 3] = \"INFO\";\n  Log2[Log2[\"DEBUG\"] = 4] = \"DEBUG\";\n  return Log2;\n})(Log || {});\n((Log2) => {\n  function reset() {\n    level = 3 /* INFO */;\n    logger = nopLogger;\n  }\n  Log2.reset = reset;\n  function setLevel(value) {\n    if (!(0 /* NONE */ <= value && value <= 4 /* DEBUG */)) {\n      throw new Error(\"Invalid log level\");\n    }\n    level = value;\n  }\n  Log2.setLevel = setLevel;\n  function setLogger(value) {\n    logger = value;\n  }\n  Log2.setLogger = setLogger;\n})(Log || (Log = {}));\nvar Logger = class _Logger {\n  constructor(_name) {\n    this._name = _name;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  debug(...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  info(...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  warn(...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  error(...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n  throw(err) {\n    this.error(err);\n    throw err;\n  }\n  create(method) {\n    const methodLogger = Object.create(this);\n    methodLogger._method = method;\n    methodLogger.debug(\"begin\");\n    return methodLogger;\n  }\n  static createStatic(name, staticMethod) {\n    const staticLogger = new _Logger(`${name}.${staticMethod}`);\n    staticLogger.debug(\"begin\");\n    return staticLogger;\n  }\n  static _format(name, method) {\n    const prefix = `[${name}]`;\n    return method ? `${prefix} ${method}:` : prefix;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  // helpers for static class methods\n  static debug(name, ...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(name), ...args);\n    }\n  }\n  static info(name, ...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(name), ...args);\n    }\n  }\n  static warn(name, ...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(name), ...args);\n    }\n  }\n  static error(name, ...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(name), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n};\nLog.reset();\n\n// src/utils/CryptoUtils.ts\nvar UUID_V4_TEMPLATE = \"10000000-1000-4000-8000-100000000000\";\nvar toBase64 = (val) => btoa([...new Uint8Array(val)].map((chr) => String.fromCharCode(chr)).join(\"\"));\nvar CryptoUtils = class _CryptoUtils {\n  static _randomWord() {\n    const arr = new Uint32Array(1);\n    crypto.getRandomValues(arr);\n    return arr[0];\n  }\n  /**\n   * Generates RFC4122 version 4 guid\n   */\n  static generateUUIDv4() {\n    const uuid = UUID_V4_TEMPLATE.replace(\n      /[018]/g,\n      (c) => (+c ^ _CryptoUtils._randomWord() & 15 >> +c / 4).toString(16)\n    );\n    return uuid.replace(/-/g, \"\");\n  }\n  /**\n   * PKCE: Generate a code verifier\n   */\n  static generateCodeVerifier() {\n    return _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4();\n  }\n  /**\n   * PKCE: Generate a code challenge\n   */\n  static async generateCodeChallenge(code_verifier) {\n    if (!crypto.subtle) {\n      throw new Error(\"Crypto.subtle is available only in secure contexts (HTTPS).\");\n    }\n    try {\n      const encoder = new TextEncoder();\n      const data = encoder.encode(code_verifier);\n      const hashed = await crypto.subtle.digest(\"SHA-256\", data);\n      return toBase64(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n    } catch (err) {\n      Logger.error(\"CryptoUtils.generateCodeChallenge\", err);\n      throw err;\n    }\n  }\n  /**\n   * Generates a base64-encoded string for a basic auth header\n   */\n  static generateBasicAuth(client_id, client_secret) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode([client_id, client_secret].join(\":\"));\n    return toBase64(data);\n  }\n};\n\n// src/utils/Event.ts\nvar Event = class {\n  constructor(_name) {\n    this._name = _name;\n    this._logger = new Logger(`Event('${this._name}')`);\n    this._callbacks = [];\n  }\n  addHandler(cb) {\n    this._callbacks.push(cb);\n    return () => this.removeHandler(cb);\n  }\n  removeHandler(cb) {\n    const idx = this._callbacks.lastIndexOf(cb);\n    if (idx >= 0) {\n      this._callbacks.splice(idx, 1);\n    }\n  }\n  async raise(...ev) {\n    this._logger.debug(\"raise:\", ...ev);\n    for (const cb of this._callbacks) {\n      await cb(...ev);\n    }\n  }\n};\n\n// src/utils/JwtUtils.ts\nimport { jwtDecode } from \"jwt-decode\";\nvar JwtUtils = class {\n  // IMPORTANT: doesn't validate the token\n  static decode(token) {\n    try {\n      return jwtDecode(token);\n    } catch (err) {\n      Logger.error(\"JwtUtils.decode\", err);\n      throw err;\n    }\n  }\n};\n\n// src/utils/PopupUtils.ts\nvar PopupUtils = class {\n  /**\n   * Populates a map of window features with a placement centered in front of\n   * the current window. If no explicit width is given, a default value is\n   * binned into [800, 720, 600, 480, 360] based on the current window's width.\n   */\n  static center({ ...features }) {\n    var _a, _b, _c;\n    if (features.width == null)\n      features.width = (_a = [800, 720, 600, 480].find((width) => width <= window.outerWidth / 1.618)) != null ? _a : 360;\n    (_b = features.left) != null ? _b : features.left = Math.max(0, Math.round(window.screenX + (window.outerWidth - features.width) / 2));\n    if (features.height != null)\n      (_c = features.top) != null ? _c : features.top = Math.max(0, Math.round(window.screenY + (window.outerHeight - features.height) / 2));\n    return features;\n  }\n  static serialize(features) {\n    return Object.entries(features).filter(([, value]) => value != null).map(([key, value]) => `${key}=${typeof value !== \"boolean\" ? value : value ? \"yes\" : \"no\"}`).join(\",\");\n  }\n};\n\n// src/utils/Timer.ts\nvar Timer = class _Timer extends Event {\n  constructor() {\n    super(...arguments);\n    this._logger = new Logger(`Timer('${this._name}')`);\n    this._timerHandle = null;\n    this._expiration = 0;\n    this._callback = () => {\n      const diff = this._expiration - _Timer.getEpochTime();\n      this._logger.debug(\"timer completes in\", diff);\n      if (this._expiration <= _Timer.getEpochTime()) {\n        this.cancel();\n        void super.raise();\n      }\n    };\n  }\n  // get the time\n  static getEpochTime() {\n    return Math.floor(Date.now() / 1e3);\n  }\n  init(durationInSeconds) {\n    const logger2 = this._logger.create(\"init\");\n    durationInSeconds = Math.max(Math.floor(durationInSeconds), 1);\n    const expiration = _Timer.getEpochTime() + durationInSeconds;\n    if (this.expiration === expiration && this._timerHandle) {\n      logger2.debug(\"skipping since already initialized for expiration at\", this.expiration);\n      return;\n    }\n    this.cancel();\n    logger2.debug(\"using duration\", durationInSeconds);\n    this._expiration = expiration;\n    const timerDurationInSeconds = Math.min(durationInSeconds, 5);\n    this._timerHandle = setInterval(this._callback, timerDurationInSeconds * 1e3);\n  }\n  get expiration() {\n    return this._expiration;\n  }\n  cancel() {\n    this._logger.create(\"cancel\");\n    if (this._timerHandle) {\n      clearInterval(this._timerHandle);\n      this._timerHandle = null;\n    }\n  }\n};\n\n// src/utils/UrlUtils.ts\nvar UrlUtils = class {\n  static readParams(url, responseMode = \"query\") {\n    if (!url)\n      throw new TypeError(\"Invalid URL\");\n    const parsedUrl = new URL(url, \"http://127.0.0.1\");\n    const params = parsedUrl[responseMode === \"fragment\" ? \"hash\" : \"search\"];\n    return new URLSearchParams(params.slice(1));\n  }\n};\nvar URL_STATE_DELIMITER = \";\";\n\n// src/errors/ErrorResponse.ts\nvar ErrorResponse = class extends Error {\n  constructor(args, form) {\n    var _a, _b, _c;\n    super(args.error_description || args.error || \"\");\n    this.form = form;\n    /** Marker to detect class: \"ErrorResponse\" */\n    this.name = \"ErrorResponse\";\n    if (!args.error) {\n      Logger.error(\"ErrorResponse\", \"No error passed\");\n      throw new Error(\"No error passed\");\n    }\n    this.error = args.error;\n    this.error_description = (_a = args.error_description) != null ? _a : null;\n    this.error_uri = (_b = args.error_uri) != null ? _b : null;\n    this.state = args.userState;\n    this.session_state = (_c = args.session_state) != null ? _c : null;\n    this.url_state = args.url_state;\n  }\n};\n\n// src/errors/ErrorTimeout.ts\nvar ErrorTimeout = class extends Error {\n  constructor(message) {\n    super(message);\n    /** Marker to detect class: \"ErrorTimeout\" */\n    this.name = \"ErrorTimeout\";\n  }\n};\n\n// src/AccessTokenEvents.ts\nvar AccessTokenEvents = class {\n  constructor(args) {\n    this._logger = new Logger(\"AccessTokenEvents\");\n    this._expiringTimer = new Timer(\"Access token expiring\");\n    this._expiredTimer = new Timer(\"Access token expired\");\n    this._expiringNotificationTimeInSeconds = args.expiringNotificationTimeInSeconds;\n  }\n  load(container) {\n    const logger2 = this._logger.create(\"load\");\n    if (container.access_token && container.expires_in !== void 0) {\n      const duration = container.expires_in;\n      logger2.debug(\"access token present, remaining duration:\", duration);\n      if (duration > 0) {\n        let expiring = duration - this._expiringNotificationTimeInSeconds;\n        if (expiring <= 0) {\n          expiring = 1;\n        }\n        logger2.debug(\"registering expiring timer, raising in\", expiring, \"seconds\");\n        this._expiringTimer.init(expiring);\n      } else {\n        logger2.debug(\"canceling existing expiring timer because we're past expiration.\");\n        this._expiringTimer.cancel();\n      }\n      const expired = duration + 1;\n      logger2.debug(\"registering expired timer, raising in\", expired, \"seconds\");\n      this._expiredTimer.init(expired);\n    } else {\n      this._expiringTimer.cancel();\n      this._expiredTimer.cancel();\n    }\n  }\n  unload() {\n    this._logger.debug(\"unload: canceling existing access token timers\");\n    this._expiringTimer.cancel();\n    this._expiredTimer.cancel();\n  }\n  /**\n   * Add callback: Raised prior to the access token expiring.\n   */\n  addAccessTokenExpiring(cb) {\n    return this._expiringTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised prior to the access token expiring.\n   */\n  removeAccessTokenExpiring(cb) {\n    this._expiringTimer.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised after the access token has expired.\n   */\n  addAccessTokenExpired(cb) {\n    return this._expiredTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised after the access token has expired.\n   */\n  removeAccessTokenExpired(cb) {\n    this._expiredTimer.removeHandler(cb);\n  }\n};\n\n// src/CheckSessionIFrame.ts\nvar CheckSessionIFrame = class {\n  constructor(_callback, _client_id, url, _intervalInSeconds, _stopOnError) {\n    this._callback = _callback;\n    this._client_id = _client_id;\n    this._intervalInSeconds = _intervalInSeconds;\n    this._stopOnError = _stopOnError;\n    this._logger = new Logger(\"CheckSessionIFrame\");\n    this._timer = null;\n    this._session_state = null;\n    this._message = (e) => {\n      if (e.origin === this._frame_origin && e.source === this._frame.contentWindow) {\n        if (e.data === \"error\") {\n          this._logger.error(\"error message from check session op iframe\");\n          if (this._stopOnError) {\n            this.stop();\n          }\n        } else if (e.data === \"changed\") {\n          this._logger.debug(\"changed message from check session op iframe\");\n          this.stop();\n          void this._callback();\n        } else {\n          this._logger.debug(e.data + \" message from check session op iframe\");\n        }\n      }\n    };\n    const parsedUrl = new URL(url);\n    this._frame_origin = parsedUrl.origin;\n    this._frame = window.document.createElement(\"iframe\");\n    this._frame.style.visibility = \"hidden\";\n    this._frame.style.position = \"fixed\";\n    this._frame.style.left = \"-1000px\";\n    this._frame.style.top = \"0\";\n    this._frame.width = \"0\";\n    this._frame.height = \"0\";\n    this._frame.src = parsedUrl.href;\n  }\n  load() {\n    return new Promise((resolve) => {\n      this._frame.onload = () => {\n        resolve();\n      };\n      window.document.body.appendChild(this._frame);\n      window.addEventListener(\"message\", this._message, false);\n    });\n  }\n  start(session_state) {\n    if (this._session_state === session_state) {\n      return;\n    }\n    this._logger.create(\"start\");\n    this.stop();\n    this._session_state = session_state;\n    const send = () => {\n      if (!this._frame.contentWindow || !this._session_state) {\n        return;\n      }\n      this._frame.contentWindow.postMessage(this._client_id + \" \" + this._session_state, this._frame_origin);\n    };\n    send();\n    this._timer = setInterval(send, this._intervalInSeconds * 1e3);\n  }\n  stop() {\n    this._logger.create(\"stop\");\n    this._session_state = null;\n    if (this._timer) {\n      clearInterval(this._timer);\n      this._timer = null;\n    }\n  }\n};\n\n// src/InMemoryWebStorage.ts\nvar InMemoryWebStorage = class {\n  constructor() {\n    this._logger = new Logger(\"InMemoryWebStorage\");\n    this._data = {};\n  }\n  clear() {\n    this._logger.create(\"clear\");\n    this._data = {};\n  }\n  getItem(key) {\n    this._logger.create(`getItem('${key}')`);\n    return this._data[key];\n  }\n  setItem(key, value) {\n    this._logger.create(`setItem('${key}')`);\n    this._data[key] = value;\n  }\n  removeItem(key) {\n    this._logger.create(`removeItem('${key}')`);\n    delete this._data[key];\n  }\n  get length() {\n    return Object.getOwnPropertyNames(this._data).length;\n  }\n  key(index) {\n    return Object.getOwnPropertyNames(this._data)[index];\n  }\n};\n\n// src/JsonService.ts\nvar JsonService = class {\n  constructor(additionalContentTypes = [], _jwtHandler = null, _extraHeaders = {}) {\n    this._jwtHandler = _jwtHandler;\n    this._extraHeaders = _extraHeaders;\n    this._logger = new Logger(\"JsonService\");\n    this._contentTypes = [];\n    this._contentTypes.push(...additionalContentTypes, \"application/json\");\n    if (_jwtHandler) {\n      this._contentTypes.push(\"application/jwt\");\n    }\n  }\n  async fetchWithTimeout(input, init = {}) {\n    const { timeoutInSeconds, ...initFetch } = init;\n    if (!timeoutInSeconds) {\n      return await fetch(input, initFetch);\n    }\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutInSeconds * 1e3);\n    try {\n      const response = await fetch(input, {\n        ...init,\n        signal: controller.signal\n      });\n      return response;\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"AbortError\") {\n        throw new ErrorTimeout(\"Network timed out\");\n      }\n      throw err;\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  }\n  async getJson(url, {\n    token,\n    credentials\n  } = {}) {\n    const logger2 = this._logger.create(\"getJson\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \")\n    };\n    if (token) {\n      logger2.debug(\"token passed, setting Authorization header\");\n      headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    this.appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, { method: \"GET\", headers, credentials });\n    } catch (err) {\n      logger2.error(\"Network Error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find((item) => contentType.startsWith(item))) {\n      logger2.throw(new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`));\n    }\n    if (response.ok && this._jwtHandler && (contentType == null ? void 0 : contentType.startsWith(\"application/jwt\"))) {\n      return await this._jwtHandler(await response.text());\n    }\n    let json;\n    try {\n      json = await response.json();\n    } catch (err) {\n      logger2.error(\"Error parsing JSON response\", err);\n      if (response.ok)\n        throw err;\n      throw new Error(`${response.statusText} (${response.status})`);\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (json.error) {\n        throw new ErrorResponse(json);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  async postForm(url, {\n    body,\n    basicAuth,\n    timeoutInSeconds,\n    initCredentials\n  }) {\n    const logger2 = this._logger.create(\"postForm\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \"),\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    };\n    if (basicAuth !== void 0) {\n      headers[\"Authorization\"] = \"Basic \" + basicAuth;\n    }\n    this.appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, { method: \"POST\", headers, body, timeoutInSeconds, credentials: initCredentials });\n    } catch (err) {\n      logger2.error(\"Network error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find((item) => contentType.startsWith(item))) {\n      throw new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`);\n    }\n    const responseText = await response.text();\n    let json = {};\n    if (responseText) {\n      try {\n        json = JSON.parse(responseText);\n      } catch (err) {\n        logger2.error(\"Error parsing JSON response\", err);\n        if (response.ok)\n          throw err;\n        throw new Error(`${response.statusText} (${response.status})`);\n      }\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (json.error) {\n        throw new ErrorResponse(json, body);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  appendExtraHeaders(headers) {\n    const logger2 = this._logger.create(\"appendExtraHeaders\");\n    const customKeys = Object.keys(this._extraHeaders);\n    const protectedHeaders = [\n      \"authorization\",\n      \"accept\",\n      \"content-type\"\n    ];\n    if (customKeys.length === 0) {\n      return;\n    }\n    customKeys.forEach((headerName) => {\n      if (protectedHeaders.includes(headerName.toLocaleLowerCase())) {\n        logger2.warn(\"Protected header could not be overridden\", headerName, protectedHeaders);\n        return;\n      }\n      const content = typeof this._extraHeaders[headerName] === \"function\" ? this._extraHeaders[headerName]() : this._extraHeaders[headerName];\n      if (content && content !== \"\") {\n        headers[headerName] = content;\n      }\n    });\n  }\n};\n\n// src/MetadataService.ts\nvar MetadataService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"MetadataService\");\n    this._signingKeys = null;\n    this._metadata = null;\n    this._metadataUrl = this._settings.metadataUrl;\n    this._jsonService = new JsonService(\n      [\"application/jwk-set+json\"],\n      null,\n      this._settings.extraHeaders\n    );\n    if (this._settings.signingKeys) {\n      this._logger.debug(\"using signingKeys from settings\");\n      this._signingKeys = this._settings.signingKeys;\n    }\n    if (this._settings.metadata) {\n      this._logger.debug(\"using metadata from settings\");\n      this._metadata = this._settings.metadata;\n    }\n    if (this._settings.fetchRequestCredentials) {\n      this._logger.debug(\"using fetchRequestCredentials from settings\");\n      this._fetchRequestCredentials = this._settings.fetchRequestCredentials;\n    }\n  }\n  resetSigningKeys() {\n    this._signingKeys = null;\n  }\n  async getMetadata() {\n    const logger2 = this._logger.create(\"getMetadata\");\n    if (this._metadata) {\n      logger2.debug(\"using cached values\");\n      return this._metadata;\n    }\n    if (!this._metadataUrl) {\n      logger2.throw(new Error(\"No authority or metadataUrl configured on settings\"));\n      throw null;\n    }\n    logger2.debug(\"getting metadata from\", this._metadataUrl);\n    const metadata = await this._jsonService.getJson(this._metadataUrl, { credentials: this._fetchRequestCredentials });\n    logger2.debug(\"merging remote JSON with seed metadata\");\n    this._metadata = Object.assign({}, this._settings.metadataSeed, metadata);\n    return this._metadata;\n  }\n  getIssuer() {\n    return this._getMetadataProperty(\"issuer\");\n  }\n  getAuthorizationEndpoint() {\n    return this._getMetadataProperty(\"authorization_endpoint\");\n  }\n  getUserInfoEndpoint() {\n    return this._getMetadataProperty(\"userinfo_endpoint\");\n  }\n  getTokenEndpoint(optional = true) {\n    return this._getMetadataProperty(\"token_endpoint\", optional);\n  }\n  getCheckSessionIframe() {\n    return this._getMetadataProperty(\"check_session_iframe\", true);\n  }\n  getEndSessionEndpoint() {\n    return this._getMetadataProperty(\"end_session_endpoint\", true);\n  }\n  getRevocationEndpoint(optional = true) {\n    return this._getMetadataProperty(\"revocation_endpoint\", optional);\n  }\n  getKeysEndpoint(optional = true) {\n    return this._getMetadataProperty(\"jwks_uri\", optional);\n  }\n  async _getMetadataProperty(name, optional = false) {\n    const logger2 = this._logger.create(`_getMetadataProperty('${name}')`);\n    const metadata = await this.getMetadata();\n    logger2.debug(\"resolved\");\n    if (metadata[name] === void 0) {\n      if (optional === true) {\n        logger2.warn(\"Metadata does not contain optional property\");\n        return void 0;\n      }\n      logger2.throw(new Error(\"Metadata does not contain property \" + name));\n    }\n    return metadata[name];\n  }\n  async getSigningKeys() {\n    const logger2 = this._logger.create(\"getSigningKeys\");\n    if (this._signingKeys) {\n      logger2.debug(\"returning signingKeys from cache\");\n      return this._signingKeys;\n    }\n    const jwks_uri = await this.getKeysEndpoint(false);\n    logger2.debug(\"got jwks_uri\", jwks_uri);\n    const keySet = await this._jsonService.getJson(jwks_uri);\n    logger2.debug(\"got key set\", keySet);\n    if (!Array.isArray(keySet.keys)) {\n      logger2.throw(new Error(\"Missing keys on keyset\"));\n      throw null;\n    }\n    this._signingKeys = keySet.keys;\n    return this._signingKeys;\n  }\n};\n\n// src/WebStorageStateStore.ts\nvar WebStorageStateStore = class {\n  constructor({\n    prefix = \"oidc.\",\n    store = localStorage\n  } = {}) {\n    this._logger = new Logger(\"WebStorageStateStore\");\n    this._store = store;\n    this._prefix = prefix;\n  }\n  async set(key, value) {\n    this._logger.create(`set('${key}')`);\n    key = this._prefix + key;\n    await this._store.setItem(key, value);\n  }\n  async get(key) {\n    this._logger.create(`get('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    return item;\n  }\n  async remove(key) {\n    this._logger.create(`remove('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    await this._store.removeItem(key);\n    return item;\n  }\n  async getAllKeys() {\n    this._logger.create(\"getAllKeys\");\n    const len = await this._store.length;\n    const keys = [];\n    for (let index = 0; index < len; index++) {\n      const key = await this._store.key(index);\n      if (key && key.indexOf(this._prefix) === 0) {\n        keys.push(key.substr(this._prefix.length));\n      }\n    }\n    return keys;\n  }\n};\n\n// src/OidcClientSettings.ts\nvar DefaultResponseType = \"code\";\nvar DefaultScope = \"openid\";\nvar DefaultClientAuthentication = \"client_secret_post\";\nvar DefaultStaleStateAgeInSeconds = 60 * 15;\nvar OidcClientSettingsStore = class {\n  constructor({\n    // metadata related\n    authority,\n    metadataUrl,\n    metadata,\n    signingKeys,\n    metadataSeed,\n    // client related\n    client_id,\n    client_secret,\n    response_type = DefaultResponseType,\n    scope = DefaultScope,\n    redirect_uri,\n    post_logout_redirect_uri,\n    client_authentication = DefaultClientAuthentication,\n    // optional protocol\n    prompt,\n    display,\n    max_age,\n    ui_locales,\n    acr_values,\n    resource,\n    response_mode,\n    // behavior flags\n    filterProtocolClaims = true,\n    loadUserInfo = false,\n    staleStateAgeInSeconds = DefaultStaleStateAgeInSeconds,\n    mergeClaimsStrategy = { array: \"replace\" },\n    disablePKCE = false,\n    // other behavior\n    stateStore,\n    revokeTokenAdditionalContentTypes,\n    fetchRequestCredentials,\n    refreshTokenAllowedScope,\n    // extra\n    extraQueryParams = {},\n    extraTokenParams = {},\n    extraHeaders = {}\n  }) {\n    this.authority = authority;\n    if (metadataUrl) {\n      this.metadataUrl = metadataUrl;\n    } else {\n      this.metadataUrl = authority;\n      if (authority) {\n        if (!this.metadataUrl.endsWith(\"/\")) {\n          this.metadataUrl += \"/\";\n        }\n        this.metadataUrl += \".well-known/openid-configuration\";\n      }\n    }\n    this.metadata = metadata;\n    this.metadataSeed = metadataSeed;\n    this.signingKeys = signingKeys;\n    this.client_id = client_id;\n    this.client_secret = client_secret;\n    this.response_type = response_type;\n    this.scope = scope;\n    this.redirect_uri = redirect_uri;\n    this.post_logout_redirect_uri = post_logout_redirect_uri;\n    this.client_authentication = client_authentication;\n    this.prompt = prompt;\n    this.display = display;\n    this.max_age = max_age;\n    this.ui_locales = ui_locales;\n    this.acr_values = acr_values;\n    this.resource = resource;\n    this.response_mode = response_mode;\n    this.filterProtocolClaims = filterProtocolClaims != null ? filterProtocolClaims : true;\n    this.loadUserInfo = !!loadUserInfo;\n    this.staleStateAgeInSeconds = staleStateAgeInSeconds;\n    this.mergeClaimsStrategy = mergeClaimsStrategy;\n    this.disablePKCE = !!disablePKCE;\n    this.revokeTokenAdditionalContentTypes = revokeTokenAdditionalContentTypes;\n    this.fetchRequestCredentials = fetchRequestCredentials ? fetchRequestCredentials : \"same-origin\";\n    if (stateStore) {\n      this.stateStore = stateStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.localStorage : new InMemoryWebStorage();\n      this.stateStore = new WebStorageStateStore({ store });\n    }\n    this.refreshTokenAllowedScope = refreshTokenAllowedScope;\n    this.extraQueryParams = extraQueryParams;\n    this.extraTokenParams = extraTokenParams;\n    this.extraHeaders = extraHeaders;\n  }\n};\n\n// src/UserInfoService.ts\nvar UserInfoService = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"UserInfoService\");\n    this._getClaimsFromJwt = async (responseText) => {\n      const logger2 = this._logger.create(\"_getClaimsFromJwt\");\n      try {\n        const payload = JwtUtils.decode(responseText);\n        logger2.debug(\"JWT decoding successful\");\n        return payload;\n      } catch (err) {\n        logger2.error(\"Error parsing JWT response\");\n        throw err;\n      }\n    };\n    this._jsonService = new JsonService(\n      void 0,\n      this._getClaimsFromJwt,\n      this._settings.extraHeaders\n    );\n  }\n  async getClaims(token) {\n    const logger2 = this._logger.create(\"getClaims\");\n    if (!token) {\n      this._logger.throw(new Error(\"No token passed\"));\n    }\n    const url = await this._metadataService.getUserInfoEndpoint();\n    logger2.debug(\"got userinfo url\", url);\n    const claims = await this._jsonService.getJson(url, {\n      token,\n      credentials: this._settings.fetchRequestCredentials\n    });\n    logger2.debug(\"got claims\", claims);\n    return claims;\n  }\n};\n\n// src/TokenClient.ts\nvar TokenClient = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"TokenClient\");\n    this._jsonService = new JsonService(\n      this._settings.revokeTokenAdditionalContentTypes,\n      null,\n      this._settings.extraHeaders\n    );\n  }\n  /**\n   * Exchange code.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n   */\n  async exchangeCode({\n    grant_type = \"authorization_code\",\n    redirect_uri = this._settings.redirect_uri,\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCode\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!redirect_uri) {\n      logger2.throw(new Error(\"A redirect_uri is required\"));\n    }\n    if (!args.code) {\n      logger2.throw(new Error(\"A code is required\"));\n    }\n    const params = new URLSearchParams({ grant_type, redirect_uri });\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, { body: params, basicAuth, initCredentials: this._settings.fetchRequestCredentials });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange credentials.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.3.2\n   */\n  async exchangeCredentials({\n    grant_type = \"password\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    scope = this._settings.scope,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCredentials\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    const params = new URLSearchParams({ grant_type, scope });\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, { body: params, basicAuth, initCredentials: this._settings.fetchRequestCredentials });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange a refresh token.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-6\n   */\n  async exchangeRefreshToken({\n    grant_type = \"refresh_token\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    timeoutInSeconds,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeRefreshToken\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!args.refresh_token) {\n      logger2.throw(new Error(\"A refresh_token is required\"));\n    }\n    const params = new URLSearchParams({ grant_type });\n    for (const [key, value] of Object.entries(args)) {\n      if (Array.isArray(value)) {\n        value.forEach((param) => params.append(key, param));\n      } else if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds, initCredentials: this._settings.fetchRequestCredentials });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Revoke an access or refresh token.\n   *\n   * @see https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n   */\n  async revoke(args) {\n    var _a;\n    const logger2 = this._logger.create(\"revoke\");\n    if (!args.token) {\n      logger2.throw(new Error(\"A token is required\"));\n    }\n    const url = await this._metadataService.getRevocationEndpoint(false);\n    logger2.debug(`got revocation endpoint, revoking ${(_a = args.token_type_hint) != null ? _a : \"default token type\"}`);\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    params.set(\"client_id\", this._settings.client_id);\n    if (this._settings.client_secret) {\n      params.set(\"client_secret\", this._settings.client_secret);\n    }\n    await this._jsonService.postForm(url, { body: params });\n    logger2.debug(\"got response\");\n  }\n};\n\n// src/ResponseValidator.ts\nvar ResponseValidator = class {\n  constructor(_settings, _metadataService, _claimsService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._claimsService = _claimsService;\n    this._logger = new Logger(\"ResponseValidator\");\n    this._userInfoService = new UserInfoService(this._settings, this._metadataService);\n    this._tokenClient = new TokenClient(this._settings, this._metadataService);\n  }\n  async validateSigninResponse(response, state) {\n    const logger2 = this._logger.create(\"validateSigninResponse\");\n    this._processSigninState(response, state);\n    logger2.debug(\"state processed\");\n    await this._processCode(response, state);\n    logger2.debug(\"code processed\");\n    if (response.isOpenId) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, state == null ? void 0 : state.skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateCredentialsResponse(response, skipUserInfo) {\n    const logger2 = this._logger.create(\"validateCredentialsResponse\");\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateRefreshResponse(response, state) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"validateRefreshResponse\");\n    response.userState = state.data;\n    (_a = response.session_state) != null ? _a : response.session_state = state.session_state;\n    (_b = response.scope) != null ? _b : response.scope = state.scope;\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response, state.id_token);\n      logger2.debug(\"ID Token validated\");\n    }\n    if (!response.id_token) {\n      response.id_token = state.id_token;\n      response.profile = state.profile;\n    }\n    const hasIdToken = response.isOpenId && !!response.id_token;\n    await this._processClaims(response, false, hasIdToken);\n    logger2.debug(\"claims processed\");\n  }\n  validateSignoutResponse(response, state) {\n    const logger2 = this._logger.create(\"validateSignoutResponse\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n  }\n  _processSigninState(response, state) {\n    var _a;\n    const logger2 = this._logger.create(\"_processSigninState\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    if (!state.client_id) {\n      logger2.throw(new Error(\"No client_id on state\"));\n    }\n    if (!state.authority) {\n      logger2.throw(new Error(\"No authority on state\"));\n    }\n    if (this._settings.authority !== state.authority) {\n      logger2.throw(new Error(\"authority mismatch on settings vs. signin state\"));\n    }\n    if (this._settings.client_id && this._settings.client_id !== state.client_id) {\n      logger2.throw(new Error(\"client_id mismatch on settings vs. signin state\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    response.url_state = state.url_state;\n    (_a = response.scope) != null ? _a : response.scope = state.scope;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n    if (state.code_verifier && !response.code) {\n      logger2.throw(new Error(\"Expected code in response\"));\n    }\n  }\n  async _processClaims(response, skipUserInfo = false, validateSub = true) {\n    const logger2 = this._logger.create(\"_processClaims\");\n    response.profile = this._claimsService.filterProtocolClaims(response.profile);\n    if (skipUserInfo || !this._settings.loadUserInfo || !response.access_token) {\n      logger2.debug(\"not loading user info\");\n      return;\n    }\n    logger2.debug(\"loading user info\");\n    const claims = await this._userInfoService.getClaims(response.access_token);\n    logger2.debug(\"user info claims received from user info endpoint\");\n    if (validateSub && claims.sub !== response.profile.sub) {\n      logger2.throw(new Error(\"subject from UserInfo response does not match subject in ID Token\"));\n    }\n    response.profile = this._claimsService.mergeClaims(response.profile, this._claimsService.filterProtocolClaims(claims));\n    logger2.debug(\"user info claims received, updated profile:\", response.profile);\n  }\n  async _processCode(response, state) {\n    const logger2 = this._logger.create(\"_processCode\");\n    if (response.code) {\n      logger2.debug(\"Validating code\");\n      const tokenResponse = await this._tokenClient.exchangeCode({\n        client_id: state.client_id,\n        client_secret: state.client_secret,\n        code: response.code,\n        redirect_uri: state.redirect_uri,\n        code_verifier: state.code_verifier,\n        ...state.extraTokenParams\n      });\n      Object.assign(response, tokenResponse);\n    } else {\n      logger2.debug(\"No code to process\");\n    }\n  }\n  _validateIdTokenAttributes(response, existingToken) {\n    var _a;\n    const logger2 = this._logger.create(\"_validateIdTokenAttributes\");\n    logger2.debug(\"decoding ID Token JWT\");\n    const incoming = JwtUtils.decode((_a = response.id_token) != null ? _a : \"\");\n    if (!incoming.sub) {\n      logger2.throw(new Error(\"ID Token is missing a subject claim\"));\n    }\n    if (existingToken) {\n      const existing = JwtUtils.decode(existingToken);\n      if (incoming.sub !== existing.sub) {\n        logger2.throw(new Error(\"sub in id_token does not match current sub\"));\n      }\n      if (incoming.auth_time && incoming.auth_time !== existing.auth_time) {\n        logger2.throw(new Error(\"auth_time in id_token does not match original auth_time\"));\n      }\n      if (incoming.azp && incoming.azp !== existing.azp) {\n        logger2.throw(new Error(\"azp in id_token does not match original azp\"));\n      }\n      if (!incoming.azp && existing.azp) {\n        logger2.throw(new Error(\"azp not in id_token, but present in original id_token\"));\n      }\n    }\n    response.profile = incoming;\n  }\n};\n\n// src/State.ts\nvar State = class _State {\n  constructor(args) {\n    this.id = args.id || CryptoUtils.generateUUIDv4();\n    this.data = args.data;\n    if (args.created && args.created > 0) {\n      this.created = args.created;\n    } else {\n      this.created = Timer.getEpochTime();\n    }\n    this.request_type = args.request_type;\n    this.url_state = args.url_state;\n  }\n  toStorageString() {\n    new Logger(\"State\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"State\", \"fromStorageString\");\n    return Promise.resolve(new _State(JSON.parse(storageString)));\n  }\n  static async clearStaleState(storage, age) {\n    const logger2 = Logger.createStatic(\"State\", \"clearStaleState\");\n    const cutoff = Timer.getEpochTime() - age;\n    const keys = await storage.getAllKeys();\n    logger2.debug(\"got keys\", keys);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const item = await storage.get(key);\n      let remove = false;\n      if (item) {\n        try {\n          const state = await _State.fromStorageString(item);\n          logger2.debug(\"got item from key:\", key, state.created);\n          if (state.created <= cutoff) {\n            remove = true;\n          }\n        } catch (err) {\n          logger2.error(\"Error parsing state for key:\", key, err);\n          remove = true;\n        }\n      } else {\n        logger2.debug(\"no item in storage for key:\", key);\n        remove = true;\n      }\n      if (remove) {\n        logger2.debug(\"removed item for key:\", key);\n        void storage.remove(key);\n      }\n    }\n  }\n};\n\n// src/SigninState.ts\nvar SigninState = class _SigninState extends State {\n  constructor(args) {\n    super(args);\n    this.code_verifier = args.code_verifier;\n    this.code_challenge = args.code_challenge;\n    this.authority = args.authority;\n    this.client_id = args.client_id;\n    this.redirect_uri = args.redirect_uri;\n    this.scope = args.scope;\n    this.client_secret = args.client_secret;\n    this.extraTokenParams = args.extraTokenParams;\n    this.response_mode = args.response_mode;\n    this.skipUserInfo = args.skipUserInfo;\n  }\n  static async create(args) {\n    const code_verifier = args.code_verifier === true ? CryptoUtils.generateCodeVerifier() : args.code_verifier || void 0;\n    const code_challenge = code_verifier ? await CryptoUtils.generateCodeChallenge(code_verifier) : void 0;\n    return new _SigninState({\n      ...args,\n      code_verifier,\n      code_challenge\n    });\n  }\n  toStorageString() {\n    new Logger(\"SigninState\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state,\n      code_verifier: this.code_verifier,\n      authority: this.authority,\n      client_id: this.client_id,\n      redirect_uri: this.redirect_uri,\n      scope: this.scope,\n      client_secret: this.client_secret,\n      extraTokenParams: this.extraTokenParams,\n      response_mode: this.response_mode,\n      skipUserInfo: this.skipUserInfo\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"SigninState\", \"fromStorageString\");\n    const data = JSON.parse(storageString);\n    return _SigninState.create(data);\n  }\n};\n\n// src/SigninRequest.ts\nvar _SigninRequest = class _SigninRequest {\n  constructor(args) {\n    this.url = args.url;\n    this.state = args.state;\n  }\n  static async create({\n    // mandatory\n    url,\n    authority,\n    client_id,\n    redirect_uri,\n    response_type,\n    scope,\n    // optional\n    state_data,\n    response_mode,\n    request_type,\n    client_secret,\n    nonce,\n    url_state,\n    resource,\n    skipUserInfo,\n    extraQueryParams,\n    extraTokenParams,\n    disablePKCE,\n    ...optionalParams\n  }) {\n    if (!url) {\n      this._logger.error(\"create: No url passed\");\n      throw new Error(\"url\");\n    }\n    if (!client_id) {\n      this._logger.error(\"create: No client_id passed\");\n      throw new Error(\"client_id\");\n    }\n    if (!redirect_uri) {\n      this._logger.error(\"create: No redirect_uri passed\");\n      throw new Error(\"redirect_uri\");\n    }\n    if (!response_type) {\n      this._logger.error(\"create: No response_type passed\");\n      throw new Error(\"response_type\");\n    }\n    if (!scope) {\n      this._logger.error(\"create: No scope passed\");\n      throw new Error(\"scope\");\n    }\n    if (!authority) {\n      this._logger.error(\"create: No authority passed\");\n      throw new Error(\"authority\");\n    }\n    const state = await SigninState.create({\n      data: state_data,\n      request_type,\n      url_state,\n      code_verifier: !disablePKCE,\n      client_id,\n      authority,\n      redirect_uri,\n      response_mode,\n      client_secret,\n      scope,\n      extraTokenParams,\n      skipUserInfo\n    });\n    const parsedUrl = new URL(url);\n    parsedUrl.searchParams.append(\"client_id\", client_id);\n    parsedUrl.searchParams.append(\"redirect_uri\", redirect_uri);\n    parsedUrl.searchParams.append(\"response_type\", response_type);\n    parsedUrl.searchParams.append(\"scope\", scope);\n    if (nonce) {\n      parsedUrl.searchParams.append(\"nonce\", nonce);\n    }\n    let stateParam = state.id;\n    if (url_state) {\n      stateParam = `${stateParam}${URL_STATE_DELIMITER}${url_state}`;\n    }\n    parsedUrl.searchParams.append(\"state\", stateParam);\n    if (state.code_challenge) {\n      parsedUrl.searchParams.append(\"code_challenge\", state.code_challenge);\n      parsedUrl.searchParams.append(\"code_challenge_method\", \"S256\");\n    }\n    if (resource) {\n      const resources = Array.isArray(resource) ? resource : [resource];\n      resources.forEach((r) => parsedUrl.searchParams.append(\"resource\", r));\n    }\n    for (const [key, value] of Object.entries({ response_mode, ...optionalParams, ...extraQueryParams })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    return new _SigninRequest({\n      url: parsedUrl.href,\n      state\n    });\n  }\n};\n_SigninRequest._logger = new Logger(\"SigninRequest\");\nvar SigninRequest = _SigninRequest;\n\n// src/SigninResponse.ts\nvar OidcScope = \"openid\";\nvar SigninResponse = class {\n  constructor(params) {\n    /** @see {@link User.access_token} */\n    this.access_token = \"\";\n    /** @see {@link User.token_type} */\n    this.token_type = \"\";\n    /** @see {@link User.profile} */\n    this.profile = {};\n    this.state = params.get(\"state\");\n    this.session_state = params.get(\"session_state\");\n    if (this.state) {\n      const splitState = decodeURIComponent(this.state).split(URL_STATE_DELIMITER);\n      this.state = splitState[0];\n      if (splitState.length > 1) {\n        this.url_state = splitState.slice(1).join(URL_STATE_DELIMITER);\n      }\n    }\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n    this.code = params.get(\"code\");\n  }\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (typeof value === \"string\")\n      value = Number(value);\n    if (value !== void 0 && value >= 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  get isOpenId() {\n    var _a;\n    return ((_a = this.scope) == null ? void 0 : _a.split(\" \").includes(OidcScope)) || !!this.id_token;\n  }\n};\n\n// src/SignoutRequest.ts\nvar SignoutRequest = class {\n  constructor({\n    url,\n    state_data,\n    id_token_hint,\n    post_logout_redirect_uri,\n    extraQueryParams,\n    request_type,\n    client_id\n  }) {\n    this._logger = new Logger(\"SignoutRequest\");\n    if (!url) {\n      this._logger.error(\"ctor: No url passed\");\n      throw new Error(\"url\");\n    }\n    const parsedUrl = new URL(url);\n    if (id_token_hint) {\n      parsedUrl.searchParams.append(\"id_token_hint\", id_token_hint);\n    }\n    if (client_id) {\n      parsedUrl.searchParams.append(\"client_id\", client_id);\n    }\n    if (post_logout_redirect_uri) {\n      parsedUrl.searchParams.append(\"post_logout_redirect_uri\", post_logout_redirect_uri);\n      if (state_data) {\n        this.state = new State({ data: state_data, request_type });\n        parsedUrl.searchParams.append(\"state\", this.state.id);\n      }\n    }\n    for (const [key, value] of Object.entries({ ...extraQueryParams })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    this.url = parsedUrl.href;\n  }\n};\n\n// src/SignoutResponse.ts\nvar SignoutResponse = class {\n  constructor(params) {\n    this.state = params.get(\"state\");\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n  }\n};\n\n// src/ClaimsService.ts\nvar DefaultProtocolClaims = [\n  \"nbf\",\n  \"jti\",\n  \"auth_time\",\n  \"nonce\",\n  \"acr\",\n  \"amr\",\n  \"azp\",\n  \"at_hash\"\n  // https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\n];\nvar InternalRequiredProtocolClaims = [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"];\nvar ClaimsService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"ClaimsService\");\n  }\n  filterProtocolClaims(claims) {\n    const result = { ...claims };\n    if (this._settings.filterProtocolClaims) {\n      let protocolClaims;\n      if (Array.isArray(this._settings.filterProtocolClaims)) {\n        protocolClaims = this._settings.filterProtocolClaims;\n      } else {\n        protocolClaims = DefaultProtocolClaims;\n      }\n      for (const claim of protocolClaims) {\n        if (!InternalRequiredProtocolClaims.includes(claim)) {\n          delete result[claim];\n        }\n      }\n    }\n    return result;\n  }\n  mergeClaims(claims1, claims2) {\n    const result = { ...claims1 };\n    for (const [claim, values] of Object.entries(claims2)) {\n      if (result[claim] !== values) {\n        if (Array.isArray(result[claim]) || Array.isArray(values)) {\n          if (this._settings.mergeClaimsStrategy.array == \"replace\") {\n            result[claim] = values;\n          } else {\n            const mergedValues = Array.isArray(result[claim]) ? result[claim] : [result[claim]];\n            for (const value of Array.isArray(values) ? values : [values]) {\n              if (!mergedValues.includes(value)) {\n                mergedValues.push(value);\n              }\n            }\n            result[claim] = mergedValues;\n          }\n        } else if (typeof result[claim] === \"object\" && typeof values === \"object\") {\n          result[claim] = this.mergeClaims(result[claim], values);\n        } else {\n          result[claim] = values;\n        }\n      }\n    }\n    return result;\n  }\n};\n\n// src/OidcClient.ts\nvar OidcClient = class {\n  constructor(settings, metadataService) {\n    this._logger = new Logger(\"OidcClient\");\n    this.settings = settings instanceof OidcClientSettingsStore ? settings : new OidcClientSettingsStore(settings);\n    this.metadataService = metadataService != null ? metadataService : new MetadataService(this.settings);\n    this._claimsService = new ClaimsService(this.settings);\n    this._validator = new ResponseValidator(this.settings, this.metadataService, this._claimsService);\n    this._tokenClient = new TokenClient(this.settings, this.metadataService);\n  }\n  async createSigninRequest({\n    state,\n    request,\n    request_uri,\n    request_type,\n    id_token_hint,\n    login_hint,\n    skipUserInfo,\n    nonce,\n    url_state,\n    response_type = this.settings.response_type,\n    scope = this.settings.scope,\n    redirect_uri = this.settings.redirect_uri,\n    prompt = this.settings.prompt,\n    display = this.settings.display,\n    max_age = this.settings.max_age,\n    ui_locales = this.settings.ui_locales,\n    acr_values = this.settings.acr_values,\n    resource = this.settings.resource,\n    response_mode = this.settings.response_mode,\n    extraQueryParams = this.settings.extraQueryParams,\n    extraTokenParams = this.settings.extraTokenParams\n  }) {\n    const logger2 = this._logger.create(\"createSigninRequest\");\n    if (response_type !== \"code\") {\n      throw new Error(\"Only the Authorization Code flow (with PKCE) is supported\");\n    }\n    const url = await this.metadataService.getAuthorizationEndpoint();\n    logger2.debug(\"Received authorization endpoint\", url);\n    const signinRequest = await SigninRequest.create({\n      url,\n      authority: this.settings.authority,\n      client_id: this.settings.client_id,\n      redirect_uri,\n      response_type,\n      scope,\n      state_data: state,\n      url_state,\n      prompt,\n      display,\n      max_age,\n      ui_locales,\n      id_token_hint,\n      login_hint,\n      acr_values,\n      resource,\n      request,\n      request_uri,\n      extraQueryParams,\n      extraTokenParams,\n      request_type,\n      response_mode,\n      client_secret: this.settings.client_secret,\n      skipUserInfo,\n      nonce,\n      disablePKCE: this.settings.disablePKCE\n    });\n    await this.clearStaleState();\n    const signinState = signinRequest.state;\n    await this.settings.stateStore.set(signinState.id, signinState.toStorageString());\n    return signinRequest;\n  }\n  async readSigninResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSigninResponseState\");\n    const response = new SigninResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.throw(new Error(\"No state in response\"));\n      throw null;\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await SigninState.fromStorageString(storedStateString);\n    return { state, response };\n  }\n  async processSigninResponse(url) {\n    const logger2 = this._logger.create(\"processSigninResponse\");\n    const { state, response } = await this.readSigninResponseState(url, true);\n    logger2.debug(\"received state from storage; validating response\");\n    await this._validator.validateSigninResponse(response, state);\n    return response;\n  }\n  async processResourceOwnerPasswordCredentials({\n    username,\n    password,\n    skipUserInfo = false,\n    extraTokenParams = {}\n  }) {\n    const tokenResponse = await this._tokenClient.exchangeCredentials({ username, password, ...extraTokenParams });\n    const signinResponse = new SigninResponse(new URLSearchParams());\n    Object.assign(signinResponse, tokenResponse);\n    await this._validator.validateCredentialsResponse(signinResponse, skipUserInfo);\n    return signinResponse;\n  }\n  async useRefreshToken({\n    state,\n    redirect_uri,\n    resource,\n    timeoutInSeconds,\n    extraTokenParams\n  }) {\n    var _a;\n    const logger2 = this._logger.create(\"useRefreshToken\");\n    let scope;\n    if (this.settings.refreshTokenAllowedScope === void 0) {\n      scope = state.scope;\n    } else {\n      const allowableScopes = this.settings.refreshTokenAllowedScope.split(\" \");\n      const providedScopes = ((_a = state.scope) == null ? void 0 : _a.split(\" \")) || [];\n      scope = providedScopes.filter((s) => allowableScopes.includes(s)).join(\" \");\n    }\n    const result = await this._tokenClient.exchangeRefreshToken({\n      refresh_token: state.refresh_token,\n      // provide the (possible filtered) scope list\n      scope,\n      redirect_uri,\n      resource,\n      timeoutInSeconds,\n      ...extraTokenParams\n    });\n    const response = new SigninResponse(new URLSearchParams());\n    Object.assign(response, result);\n    logger2.debug(\"validating response\", response);\n    await this._validator.validateRefreshResponse(response, {\n      ...state,\n      // override the scope in the state handed over to the validator\n      // so it can set the granted scope to the requested scope in case none is included in the response\n      scope\n    });\n    return response;\n  }\n  async createSignoutRequest({\n    state,\n    id_token_hint,\n    client_id,\n    request_type,\n    post_logout_redirect_uri = this.settings.post_logout_redirect_uri,\n    extraQueryParams = this.settings.extraQueryParams\n  } = {}) {\n    const logger2 = this._logger.create(\"createSignoutRequest\");\n    const url = await this.metadataService.getEndSessionEndpoint();\n    if (!url) {\n      logger2.throw(new Error(\"No end session endpoint\"));\n      throw null;\n    }\n    logger2.debug(\"Received end session endpoint\", url);\n    if (!client_id && post_logout_redirect_uri && !id_token_hint) {\n      client_id = this.settings.client_id;\n    }\n    const request = new SignoutRequest({\n      url,\n      id_token_hint,\n      client_id,\n      post_logout_redirect_uri,\n      state_data: state,\n      extraQueryParams,\n      request_type\n    });\n    await this.clearStaleState();\n    const signoutState = request.state;\n    if (signoutState) {\n      logger2.debug(\"Signout request has state to persist\");\n      await this.settings.stateStore.set(signoutState.id, signoutState.toStorageString());\n    }\n    return request;\n  }\n  async readSignoutResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSignoutResponseState\");\n    const response = new SignoutResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.debug(\"No state in response\");\n      if (response.error) {\n        logger2.warn(\"Response was error:\", response.error);\n        throw new ErrorResponse(response);\n      }\n      return { state: void 0, response };\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await State.fromStorageString(storedStateString);\n    return { state, response };\n  }\n  async processSignoutResponse(url) {\n    const logger2 = this._logger.create(\"processSignoutResponse\");\n    const { state, response } = await this.readSignoutResponseState(url, true);\n    if (state) {\n      logger2.debug(\"Received state from storage; validating response\");\n      this._validator.validateSignoutResponse(response, state);\n    } else {\n      logger2.debug(\"No state from storage; skipping response validation\");\n    }\n    return response;\n  }\n  clearStaleState() {\n    this._logger.create(\"clearStaleState\");\n    return State.clearStaleState(this.settings.stateStore, this.settings.staleStateAgeInSeconds);\n  }\n  async revokeToken(token, type) {\n    this._logger.create(\"revokeToken\");\n    return await this._tokenClient.revoke({\n      token,\n      token_type_hint: type\n    });\n  }\n};\n\n// src/SessionMonitor.ts\nvar SessionMonitor = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SessionMonitor\");\n    this._start = async (user) => {\n      const session_state = user.session_state;\n      if (!session_state) {\n        return;\n      }\n      const logger2 = this._logger.create(\"_start\");\n      if (user.profile) {\n        this._sub = user.profile.sub;\n        logger2.debug(\"session_state\", session_state, \", sub\", this._sub);\n      } else {\n        this._sub = void 0;\n        logger2.debug(\"session_state\", session_state, \", anonymous user\");\n      }\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.start(session_state);\n        return;\n      }\n      try {\n        const url = await this._userManager.metadataService.getCheckSessionIframe();\n        if (url) {\n          logger2.debug(\"initializing check session iframe\");\n          const client_id = this._userManager.settings.client_id;\n          const intervalInSeconds = this._userManager.settings.checkSessionIntervalInSeconds;\n          const stopOnError = this._userManager.settings.stopCheckSessionOnError;\n          const checkSessionIFrame = new CheckSessionIFrame(this._callback, client_id, url, intervalInSeconds, stopOnError);\n          await checkSessionIFrame.load();\n          this._checkSessionIFrame = checkSessionIFrame;\n          checkSessionIFrame.start(session_state);\n        } else {\n          logger2.warn(\"no check session iframe found in the metadata\");\n        }\n      } catch (err) {\n        logger2.error(\"Error from getCheckSessionIframe:\", err instanceof Error ? err.message : err);\n      }\n    };\n    this._stop = () => {\n      const logger2 = this._logger.create(\"_stop\");\n      this._sub = void 0;\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.stop();\n      }\n      if (this._userManager.settings.monitorAnonymousSession) {\n        const timerHandle = setInterval(async () => {\n          clearInterval(timerHandle);\n          try {\n            const session = await this._userManager.querySessionStatus();\n            if (session) {\n              const tmpUser = {\n                session_state: session.session_state,\n                profile: session.sub ? {\n                  sub: session.sub\n                } : null\n              };\n              void this._start(tmpUser);\n            }\n          } catch (err) {\n            logger2.error(\"error from querySessionStatus\", err instanceof Error ? err.message : err);\n          }\n        }, 1e3);\n      }\n    };\n    this._callback = async () => {\n      const logger2 = this._logger.create(\"_callback\");\n      try {\n        const session = await this._userManager.querySessionStatus();\n        let raiseEvent = true;\n        if (session && this._checkSessionIFrame) {\n          if (session.sub === this._sub) {\n            raiseEvent = false;\n            this._checkSessionIFrame.start(session.session_state);\n            logger2.debug(\"same sub still logged in at OP, session state has changed, restarting check session iframe; session_state\", session.session_state);\n            await this._userManager.events._raiseUserSessionChanged();\n          } else {\n            logger2.debug(\"different subject signed into OP\", session.sub);\n          }\n        } else {\n          logger2.debug(\"subject no longer signed into OP\");\n        }\n        if (raiseEvent) {\n          if (this._sub) {\n            await this._userManager.events._raiseUserSignedOut();\n          } else {\n            await this._userManager.events._raiseUserSignedIn();\n          }\n        } else {\n          logger2.debug(\"no change in session detected, no event to raise\");\n        }\n      } catch (err) {\n        if (this._sub) {\n          logger2.debug(\"Error calling queryCurrentSigninSession; raising signed out event\", err);\n          await this._userManager.events._raiseUserSignedOut();\n        }\n      }\n    };\n    if (!_userManager) {\n      this._logger.throw(new Error(\"No user manager passed\"));\n    }\n    this._userManager.events.addUserLoaded(this._start);\n    this._userManager.events.addUserUnloaded(this._stop);\n    this._init().catch((err) => {\n      this._logger.error(err);\n    });\n  }\n  async _init() {\n    this._logger.create(\"_init\");\n    const user = await this._userManager.getUser();\n    if (user) {\n      void this._start(user);\n    } else if (this._userManager.settings.monitorAnonymousSession) {\n      const session = await this._userManager.querySessionStatus();\n      if (session) {\n        const tmpUser = {\n          session_state: session.session_state,\n          profile: session.sub ? {\n            sub: session.sub\n          } : null\n        };\n        void this._start(tmpUser);\n      }\n    }\n  }\n};\n\n// src/User.ts\nvar User = class _User {\n  constructor(args) {\n    var _a;\n    this.id_token = args.id_token;\n    this.session_state = (_a = args.session_state) != null ? _a : null;\n    this.access_token = args.access_token;\n    this.refresh_token = args.refresh_token;\n    this.token_type = args.token_type;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.expires_at = args.expires_at;\n    this.state = args.userState;\n    this.url_state = args.url_state;\n  }\n  /** Computed number of seconds the access token has remaining. */\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (value !== void 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  /** Computed value indicating if the access token is expired. */\n  get expired() {\n    const expires_in = this.expires_in;\n    if (expires_in === void 0) {\n      return void 0;\n    }\n    return expires_in <= 0;\n  }\n  /** Array representing the parsed values from the `scope`. */\n  get scopes() {\n    var _a, _b;\n    return (_b = (_a = this.scope) == null ? void 0 : _a.split(\" \")) != null ? _b : [];\n  }\n  toStorageString() {\n    new Logger(\"User\").create(\"toStorageString\");\n    return JSON.stringify({\n      id_token: this.id_token,\n      session_state: this.session_state,\n      access_token: this.access_token,\n      refresh_token: this.refresh_token,\n      token_type: this.token_type,\n      scope: this.scope,\n      profile: this.profile,\n      expires_at: this.expires_at\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"User\", \"fromStorageString\");\n    return new _User(JSON.parse(storageString));\n  }\n};\n\n// src/navigators/AbstractChildWindow.ts\nvar messageSource = \"oidc-client\";\nvar AbstractChildWindow = class {\n  constructor() {\n    this._abort = new Event(\"Window navigation aborted\");\n    this._disposeHandlers = /* @__PURE__ */ new Set();\n    this._window = null;\n  }\n  async navigate(params) {\n    const logger2 = this._logger.create(\"navigate\");\n    if (!this._window) {\n      throw new Error(\"Attempted to navigate on a disposed window\");\n    }\n    logger2.debug(\"setting URL in window\");\n    this._window.location.replace(params.url);\n    const { url, keepOpen } = await new Promise((resolve, reject) => {\n      const listener = (e) => {\n        var _a;\n        const data = e.data;\n        const origin = (_a = params.scriptOrigin) != null ? _a : window.location.origin;\n        if (e.origin !== origin || (data == null ? void 0 : data.source) !== messageSource) {\n          return;\n        }\n        try {\n          const state = UrlUtils.readParams(data.url, params.response_mode).get(\"state\");\n          if (!state) {\n            logger2.warn(\"no state found in response url\");\n          }\n          if (e.source !== this._window && state !== params.state) {\n            return;\n          }\n        } catch (err) {\n          this._dispose();\n          reject(new Error(\"Invalid response from window\"));\n        }\n        resolve(data);\n      };\n      window.addEventListener(\"message\", listener, false);\n      this._disposeHandlers.add(() => window.removeEventListener(\"message\", listener, false));\n      this._disposeHandlers.add(this._abort.addHandler((reason) => {\n        this._dispose();\n        reject(reason);\n      }));\n    });\n    logger2.debug(\"got response from window\");\n    this._dispose();\n    if (!keepOpen) {\n      this.close();\n    }\n    return { url };\n  }\n  _dispose() {\n    this._logger.create(\"_dispose\");\n    for (const dispose of this._disposeHandlers) {\n      dispose();\n    }\n    this._disposeHandlers.clear();\n  }\n  static _notifyParent(parent, url, keepOpen = false, targetOrigin = window.location.origin) {\n    parent.postMessage({\n      source: messageSource,\n      url,\n      keepOpen\n    }, targetOrigin);\n  }\n};\n\n// src/UserManagerSettings.ts\nvar DefaultPopupWindowFeatures = {\n  location: false,\n  toolbar: false,\n  height: 640,\n  closePopupWindowAfterInSeconds: -1\n};\nvar DefaultPopupTarget = \"_blank\";\nvar DefaultAccessTokenExpiringNotificationTimeInSeconds = 60;\nvar DefaultCheckSessionIntervalInSeconds = 2;\nvar DefaultSilentRequestTimeoutInSeconds = 10;\nvar UserManagerSettingsStore = class extends OidcClientSettingsStore {\n  constructor(args) {\n    const {\n      popup_redirect_uri = args.redirect_uri,\n      popup_post_logout_redirect_uri = args.post_logout_redirect_uri,\n      popupWindowFeatures = DefaultPopupWindowFeatures,\n      popupWindowTarget = DefaultPopupTarget,\n      redirectMethod = \"assign\",\n      redirectTarget = \"self\",\n      iframeNotifyParentOrigin = args.iframeNotifyParentOrigin,\n      iframeScriptOrigin = args.iframeScriptOrigin,\n      silent_redirect_uri = args.redirect_uri,\n      silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds,\n      automaticSilentRenew = true,\n      validateSubOnSilentRenew = true,\n      includeIdTokenInSilentRenew = false,\n      monitorSession = false,\n      monitorAnonymousSession = false,\n      checkSessionIntervalInSeconds = DefaultCheckSessionIntervalInSeconds,\n      query_status_response_type = \"code\",\n      stopCheckSessionOnError = true,\n      revokeTokenTypes = [\"access_token\", \"refresh_token\"],\n      revokeTokensOnSignout = false,\n      includeIdTokenInSilentSignout = false,\n      accessTokenExpiringNotificationTimeInSeconds = DefaultAccessTokenExpiringNotificationTimeInSeconds,\n      userStore\n    } = args;\n    super(args);\n    this.popup_redirect_uri = popup_redirect_uri;\n    this.popup_post_logout_redirect_uri = popup_post_logout_redirect_uri;\n    this.popupWindowFeatures = popupWindowFeatures;\n    this.popupWindowTarget = popupWindowTarget;\n    this.redirectMethod = redirectMethod;\n    this.redirectTarget = redirectTarget;\n    this.iframeNotifyParentOrigin = iframeNotifyParentOrigin;\n    this.iframeScriptOrigin = iframeScriptOrigin;\n    this.silent_redirect_uri = silent_redirect_uri;\n    this.silentRequestTimeoutInSeconds = silentRequestTimeoutInSeconds;\n    this.automaticSilentRenew = automaticSilentRenew;\n    this.validateSubOnSilentRenew = validateSubOnSilentRenew;\n    this.includeIdTokenInSilentRenew = includeIdTokenInSilentRenew;\n    this.monitorSession = monitorSession;\n    this.monitorAnonymousSession = monitorAnonymousSession;\n    this.checkSessionIntervalInSeconds = checkSessionIntervalInSeconds;\n    this.stopCheckSessionOnError = stopCheckSessionOnError;\n    this.query_status_response_type = query_status_response_type;\n    this.revokeTokenTypes = revokeTokenTypes;\n    this.revokeTokensOnSignout = revokeTokensOnSignout;\n    this.includeIdTokenInSilentSignout = includeIdTokenInSilentSignout;\n    this.accessTokenExpiringNotificationTimeInSeconds = accessTokenExpiringNotificationTimeInSeconds;\n    if (userStore) {\n      this.userStore = userStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.sessionStorage : new InMemoryWebStorage();\n      this.userStore = new WebStorageStateStore({ store });\n    }\n  }\n};\n\n// src/navigators/IFrameWindow.ts\nvar IFrameWindow = class _IFrameWindow extends AbstractChildWindow {\n  constructor({\n    silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds\n  }) {\n    super();\n    this._logger = new Logger(\"IFrameWindow\");\n    this._timeoutInSeconds = silentRequestTimeoutInSeconds;\n    this._frame = _IFrameWindow.createHiddenIframe();\n    this._window = this._frame.contentWindow;\n  }\n  static createHiddenIframe() {\n    const iframe = window.document.createElement(\"iframe\");\n    iframe.style.visibility = \"hidden\";\n    iframe.style.position = \"fixed\";\n    iframe.style.left = \"-1000px\";\n    iframe.style.top = \"0\";\n    iframe.width = \"0\";\n    iframe.height = \"0\";\n    window.document.body.appendChild(iframe);\n    return iframe;\n  }\n  async navigate(params) {\n    this._logger.debug(\"navigate: Using timeout of:\", this._timeoutInSeconds);\n    const timer = setTimeout(() => void this._abort.raise(new ErrorTimeout(\"IFrame timed out without a response\")), this._timeoutInSeconds * 1e3);\n    this._disposeHandlers.add(() => clearTimeout(timer));\n    return await super.navigate(params);\n  }\n  close() {\n    var _a;\n    if (this._frame) {\n      if (this._frame.parentNode) {\n        this._frame.addEventListener(\"load\", (ev) => {\n          var _a2;\n          const frame = ev.target;\n          (_a2 = frame.parentNode) == null ? void 0 : _a2.removeChild(frame);\n          void this._abort.raise(new Error(\"IFrame removed from DOM\"));\n        }, true);\n        (_a = this._frame.contentWindow) == null ? void 0 : _a.location.replace(\"about:blank\");\n      }\n      this._frame = null;\n    }\n    this._window = null;\n  }\n  static notifyParent(url, targetOrigin) {\n    return super._notifyParent(window.parent, url, false, targetOrigin);\n  }\n};\n\n// src/navigators/IFrameNavigator.ts\nvar IFrameNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"IFrameNavigator\");\n  }\n  async prepare({\n    silentRequestTimeoutInSeconds = this._settings.silentRequestTimeoutInSeconds\n  }) {\n    return new IFrameWindow({ silentRequestTimeoutInSeconds });\n  }\n  async callback(url) {\n    this._logger.create(\"callback\");\n    IFrameWindow.notifyParent(url, this._settings.iframeNotifyParentOrigin);\n  }\n};\n\n// src/navigators/PopupWindow.ts\nvar checkForPopupClosedInterval = 500;\nvar second = 1e3;\nvar PopupWindow = class extends AbstractChildWindow {\n  constructor({\n    popupWindowTarget = DefaultPopupTarget,\n    popupWindowFeatures = {}\n  }) {\n    super();\n    this._logger = new Logger(\"PopupWindow\");\n    const centeredPopup = PopupUtils.center({ ...DefaultPopupWindowFeatures, ...popupWindowFeatures });\n    this._window = window.open(void 0, popupWindowTarget, PopupUtils.serialize(centeredPopup));\n    if (popupWindowFeatures.closePopupWindowAfterInSeconds && popupWindowFeatures.closePopupWindowAfterInSeconds > 0) {\n      setTimeout(() => {\n        if (!this._window || typeof this._window.closed !== \"boolean\" || this._window.closed) {\n          void this._abort.raise(new Error(\"Popup blocked by user\"));\n          return;\n        }\n        this.close();\n      }, popupWindowFeatures.closePopupWindowAfterInSeconds * second);\n    }\n  }\n  async navigate(params) {\n    var _a;\n    (_a = this._window) == null ? void 0 : _a.focus();\n    const popupClosedInterval = setInterval(() => {\n      if (!this._window || this._window.closed) {\n        void this._abort.raise(new Error(\"Popup closed by user\"));\n      }\n    }, checkForPopupClosedInterval);\n    this._disposeHandlers.add(() => clearInterval(popupClosedInterval));\n    return await super.navigate(params);\n  }\n  close() {\n    if (this._window) {\n      if (!this._window.closed) {\n        this._window.close();\n        void this._abort.raise(new Error(\"Popup closed\"));\n      }\n    }\n    this._window = null;\n  }\n  static notifyOpener(url, keepOpen) {\n    if (!window.opener) {\n      throw new Error(\"No window.opener. Can't complete notification.\");\n    }\n    return super._notifyParent(window.opener, url, keepOpen);\n  }\n};\n\n// src/navigators/PopupNavigator.ts\nvar PopupNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"PopupNavigator\");\n  }\n  async prepare({\n    popupWindowFeatures = this._settings.popupWindowFeatures,\n    popupWindowTarget = this._settings.popupWindowTarget\n  }) {\n    return new PopupWindow({ popupWindowFeatures, popupWindowTarget });\n  }\n  async callback(url, { keepOpen = false }) {\n    this._logger.create(\"callback\");\n    PopupWindow.notifyOpener(url, keepOpen);\n  }\n};\n\n// src/navigators/RedirectNavigator.ts\nvar RedirectNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"RedirectNavigator\");\n  }\n  async prepare({\n    redirectMethod = this._settings.redirectMethod,\n    redirectTarget = this._settings.redirectTarget\n  }) {\n    var _a;\n    this._logger.create(\"prepare\");\n    let targetWindow = window.self;\n    if (redirectTarget === \"top\") {\n      targetWindow = (_a = window.top) != null ? _a : window.self;\n    }\n    const redirect = targetWindow.location[redirectMethod].bind(targetWindow.location);\n    let abort;\n    return {\n      navigate: async (params) => {\n        this._logger.create(\"navigate\");\n        const promise = new Promise((resolve, reject) => {\n          abort = reject;\n        });\n        redirect(params.url);\n        return await promise;\n      },\n      close: () => {\n        this._logger.create(\"close\");\n        abort == null ? void 0 : abort(new Error(\"Redirect aborted\"));\n        targetWindow.stop();\n      }\n    };\n  }\n  async callback() {\n    return;\n  }\n};\n\n// src/UserManagerEvents.ts\nvar UserManagerEvents = class extends AccessTokenEvents {\n  constructor(settings) {\n    super({ expiringNotificationTimeInSeconds: settings.accessTokenExpiringNotificationTimeInSeconds });\n    this._logger = new Logger(\"UserManagerEvents\");\n    this._userLoaded = new Event(\"User loaded\");\n    this._userUnloaded = new Event(\"User unloaded\");\n    this._silentRenewError = new Event(\"Silent renew error\");\n    this._userSignedIn = new Event(\"User signed in\");\n    this._userSignedOut = new Event(\"User signed out\");\n    this._userSessionChanged = new Event(\"User session changed\");\n  }\n  async load(user, raiseEvent = true) {\n    super.load(user);\n    if (raiseEvent) {\n      await this._userLoaded.raise(user);\n    }\n  }\n  async unload() {\n    super.unload();\n    await this._userUnloaded.raise();\n  }\n  /**\n   * Add callback: Raised when a user session has been established (or re-established).\n   */\n  addUserLoaded(cb) {\n    return this._userLoaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been established (or re-established).\n   */\n  removeUserLoaded(cb) {\n    return this._userLoaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when a user session has been terminated.\n   */\n  addUserUnloaded(cb) {\n    return this._userUnloaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been terminated.\n   */\n  removeUserUnloaded(cb) {\n    return this._userUnloaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when the automatic silent renew has failed.\n   */\n  addSilentRenewError(cb) {\n    return this._silentRenewError.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the automatic silent renew has failed.\n   */\n  removeSilentRenewError(cb) {\n    return this._silentRenewError.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseSilentRenewError(e) {\n    await this._silentRenewError.raise(e);\n  }\n  /**\n   * Add callback: Raised when the user is signed in (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedIn(cb) {\n    return this._userSignedIn.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user is signed in (when `monitorSession` is set).\n   */\n  removeUserSignedIn(cb) {\n    this._userSignedIn.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedIn() {\n    await this._userSignedIn.raise();\n  }\n  /**\n   * Add callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedOut(cb) {\n    return this._userSignedOut.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   */\n  removeUserSignedOut(cb) {\n    this._userSignedOut.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedOut() {\n    await this._userSignedOut.raise();\n  }\n  /**\n   * Add callback: Raised when the user session changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSessionChanged(cb) {\n    return this._userSessionChanged.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user session changed (when `monitorSession` is set).\n   */\n  removeUserSessionChanged(cb) {\n    this._userSessionChanged.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSessionChanged() {\n    await this._userSessionChanged.raise();\n  }\n};\n\n// src/SilentRenewService.ts\nvar SilentRenewService = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SilentRenewService\");\n    this._isStarted = false;\n    this._retryTimer = new Timer(\"Retry Silent Renew\");\n    this._tokenExpiring = async () => {\n      const logger2 = this._logger.create(\"_tokenExpiring\");\n      try {\n        await this._userManager.signinSilent();\n        logger2.debug(\"silent token renewal successful\");\n      } catch (err) {\n        if (err instanceof ErrorTimeout) {\n          logger2.warn(\"ErrorTimeout from signinSilent:\", err, \"retry in 5s\");\n          this._retryTimer.init(5);\n          return;\n        }\n        logger2.error(\"Error from signinSilent:\", err);\n        await this._userManager.events._raiseSilentRenewError(err);\n      }\n    };\n  }\n  async start() {\n    const logger2 = this._logger.create(\"start\");\n    if (!this._isStarted) {\n      this._isStarted = true;\n      this._userManager.events.addAccessTokenExpiring(this._tokenExpiring);\n      this._retryTimer.addHandler(this._tokenExpiring);\n      try {\n        await this._userManager.getUser();\n      } catch (err) {\n        logger2.error(\"getUser error\", err);\n      }\n    }\n  }\n  stop() {\n    if (this._isStarted) {\n      this._retryTimer.cancel();\n      this._retryTimer.removeHandler(this._tokenExpiring);\n      this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring);\n      this._isStarted = false;\n    }\n  }\n};\n\n// src/RefreshState.ts\nvar RefreshState = class {\n  constructor(args) {\n    this.refresh_token = args.refresh_token;\n    this.id_token = args.id_token;\n    this.session_state = args.session_state;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.data = args.state;\n  }\n};\n\n// src/UserManager.ts\nvar UserManager = class {\n  constructor(settings, redirectNavigator, popupNavigator, iframeNavigator) {\n    this._logger = new Logger(\"UserManager\");\n    this.settings = new UserManagerSettingsStore(settings);\n    this._client = new OidcClient(settings);\n    this._redirectNavigator = redirectNavigator != null ? redirectNavigator : new RedirectNavigator(this.settings);\n    this._popupNavigator = popupNavigator != null ? popupNavigator : new PopupNavigator(this.settings);\n    this._iframeNavigator = iframeNavigator != null ? iframeNavigator : new IFrameNavigator(this.settings);\n    this._events = new UserManagerEvents(this.settings);\n    this._silentRenewService = new SilentRenewService(this);\n    if (this.settings.automaticSilentRenew) {\n      this.startSilentRenew();\n    }\n    this._sessionMonitor = null;\n    if (this.settings.monitorSession) {\n      this._sessionMonitor = new SessionMonitor(this);\n    }\n  }\n  /**\n   * Get object used to register for events raised by the `UserManager`.\n   */\n  get events() {\n    return this._events;\n  }\n  /**\n   * Get object used to access the metadata configuration of the identity provider.\n   */\n  get metadataService() {\n    return this._client.metadataService;\n  }\n  /**\n   * Load the `User` object for the currently authenticated user.\n   *\n   * @returns A promise\n   */\n  async getUser() {\n    const logger2 = this._logger.create(\"getUser\");\n    const user = await this._loadUser();\n    if (user) {\n      logger2.info(\"user loaded\");\n      await this._events.load(user, false);\n      return user;\n    }\n    logger2.info(\"user not found in storage\");\n    return null;\n  }\n  /**\n   * Remove from any storage the currently authenticated user.\n   *\n   * @returns A promise\n   */\n  async removeUser() {\n    const logger2 = this._logger.create(\"removeUser\");\n    await this.storeUser(null);\n    logger2.info(\"user removed from storage\");\n    await this._events.unload();\n  }\n  /**\n   * Trigger a redirect of the current window to the authorization endpoint.\n   *\n   * @returns A promise\n   *\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinRedirect(args = {}) {\n    this._logger.create(\"signinRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    const handle = await this._redirectNavigator.prepare({ redirectMethod });\n    await this._signinStart({\n      request_type: \"si:r\",\n      ...requestArgs\n    }, handle);\n  }\n  /**\n   * Process the response (callback) from the authorization endpoint.\n   * It is recommend to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise containing the authenticated `User`.\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinRedirectCallback\");\n    const user = await this._signinEnd(url);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger the signin with user/password.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws {@link ErrorResponse} In cases of wrong authentication.\n   */\n  async signinResourceOwnerCredentials({\n    username,\n    password,\n    skipUserInfo = false\n  }) {\n    const logger2 = this._logger.create(\"signinResourceOwnerCredential\");\n    const signinResponse = await this._client.processResourceOwnerPasswordCredentials({ username, password, skipUserInfo, extraTokenParams: this.settings.extraTokenParams });\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger a request (via a popup window) to the authorization endpoint.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinPopup(args = {}) {\n    const logger2 = this._logger.create(\"signinPopup\");\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No popup_redirect_uri configured\"));\n    }\n    const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget });\n    const user = await this._signin({\n      request_type: \"si:p\",\n      redirect_uri: url,\n      display: \"popup\",\n      ...requestArgs\n    }, handle);\n    if (user) {\n      if (user.profile && user.profile.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  /**\n   * Notify the opening window of response (callback) from the authorization endpoint.\n   * It is recommend to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signinPopupCallback\");\n    await this._popupNavigator.callback(url, { keepOpen });\n    logger2.info(\"success\");\n  }\n  /**\n   * Trigger a silent request (via refresh token or an iframe) to the authorization endpoint.\n   *\n   * @returns A promise that contains the authenticated `User`.\n   */\n  async signinSilent(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signinSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    let user = await this._loadUser();\n    if (user == null ? void 0 : user.refresh_token) {\n      logger2.debug(\"using refresh token\");\n      const state = new RefreshState(user);\n      return await this._useRefreshToken({\n        state,\n        redirect_uri: requestArgs.redirect_uri,\n        resource: requestArgs.resource,\n        extraTokenParams: requestArgs.extraTokenParams,\n        timeoutInSeconds: silentRequestTimeoutInSeconds\n      });\n    }\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    let verifySub;\n    if (user && this.settings.validateSubOnSilentRenew) {\n      logger2.debug(\"subject prior to silent renew:\", user.profile.sub);\n      verifySub = user.profile.sub;\n    }\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    user = await this._signin({\n      request_type: \"si:s\",\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      ...requestArgs\n    }, handle, verifySub);\n    if (user) {\n      if ((_a = user.profile) == null ? void 0 : _a.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  async _useRefreshToken(args) {\n    const response = await this._client.useRefreshToken({\n      ...args,\n      timeoutInSeconds: this.settings.silentRequestTimeoutInSeconds\n    });\n    const user = new User({ ...args.state, ...response });\n    await this.storeUser(user);\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   *\n   * Notify the parent window of response (callback) from the authorization endpoint.\n   * It is recommend to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process any response (callback) from the authorization endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signinRedirectCallback}\n   * - {@link UserManager.signinPopupCallback}\n   * - {@link UserManager.signinSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signout can not processed.\n   */\n  async signinCallback(url = window.location.href) {\n    const { state } = await this._client.readSigninResponseState(url);\n    switch (state.request_type) {\n      case \"si:r\":\n        return await this.signinRedirectCallback(url);\n      case \"si:p\":\n        return await this.signinPopupCallback(url);\n      case \"si:s\":\n        return await this.signinSilentCallback(url);\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n  }\n  /**\n   * Process any response (callback) from the end session endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signoutRedirectCallback}\n   * - {@link UserManager.signoutPopupCallback}\n   * - {@link UserManager.signoutSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signout can not processed.\n   */\n  async signoutCallback(url = window.location.href, keepOpen = false) {\n    const { state } = await this._client.readSignoutResponseState(url);\n    if (!state) {\n      return;\n    }\n    switch (state.request_type) {\n      case \"so:r\":\n        await this.signoutRedirectCallback(url);\n        break;\n      case \"so:p\":\n        await this.signoutPopupCallback(url, keepOpen);\n        break;\n      case \"so:s\":\n        await this.signoutSilentCallback(url);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n  }\n  /**\n   * Query OP for user's current signin status.\n   *\n   * @returns A promise object with session_state and subject identifier.\n   */\n  async querySessionStatus(args = {}) {\n    const logger2 = this._logger.create(\"querySessionStatus\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    const user = await this._loadUser();\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    const navResponse = await this._signinStart({\n      request_type: \"si:s\",\n      // this acts like a signin silent\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      response_type: this.settings.query_status_response_type,\n      scope: \"openid\",\n      skipUserInfo: true,\n      ...requestArgs\n    }, handle);\n    try {\n      const signinResponse = await this._client.processSigninResponse(navResponse.url);\n      logger2.debug(\"got signin response\");\n      if (signinResponse.session_state && signinResponse.profile.sub) {\n        logger2.info(\"success for subject\", signinResponse.profile.sub);\n        return {\n          session_state: signinResponse.session_state,\n          sub: signinResponse.profile.sub\n        };\n      }\n      logger2.info(\"success, user not authenticated\");\n      return null;\n    } catch (err) {\n      if (this.settings.monitorAnonymousSession && err instanceof ErrorResponse) {\n        switch (err.error) {\n          case \"login_required\":\n          case \"consent_required\":\n          case \"interaction_required\":\n          case \"account_selection_required\":\n            logger2.info(\"success for anonymous user\");\n            return {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              session_state: err.session_state\n            };\n        }\n      }\n      throw err;\n    }\n  }\n  async _signin(args, handle, verifySub) {\n    const navResponse = await this._signinStart(args, handle);\n    return await this._signinEnd(navResponse.url, verifySub);\n  }\n  async _signinStart(args, handle) {\n    const logger2 = this._logger.create(\"_signinStart\");\n    try {\n      const signinRequest = await this._client.createSigninRequest(args);\n      logger2.debug(\"got signin request\");\n      return await handle.navigate({\n        url: signinRequest.url,\n        state: signinRequest.state.id,\n        response_mode: signinRequest.state.response_mode,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signinEnd(url, verifySub) {\n    const logger2 = this._logger.create(\"_signinEnd\");\n    const signinResponse = await this._client.processSigninResponse(url);\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse, verifySub);\n    return user;\n  }\n  async _buildUser(signinResponse, verifySub) {\n    const logger2 = this._logger.create(\"_buildUser\");\n    const user = new User(signinResponse);\n    if (verifySub) {\n      if (verifySub !== user.profile.sub) {\n        logger2.debug(\"current user does not match user returned from signin. sub from signin:\", user.profile.sub);\n        throw new ErrorResponse({ ...signinResponse, error: \"login_required\" });\n      }\n      logger2.debug(\"current user matches user returned from signin\");\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   * Trigger a redirect of the current window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutRedirect(args = {}) {\n    const logger2 = this._logger.create(\"signoutRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    const handle = await this._redirectNavigator.prepare({ redirectMethod });\n    await this._signoutStart({\n      request_type: \"so:r\",\n      post_logout_redirect_uri: this.settings.post_logout_redirect_uri,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint.\n   * It is recommend to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise containing signout response\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutRedirectCallback\");\n    const response = await this._signoutEnd(url);\n    logger2.info(\"success\");\n    return response;\n  }\n  /**\n   * Trigger a redirect of a popup window window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutPopup(args = {}) {\n    const logger2 = this._logger.create(\"signoutPopup\");\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget });\n    await this._signout({\n      request_type: \"so:p\",\n      post_logout_redirect_uri: url,\n      // we're putting a dummy entry in here because we\n      // need a unique id from the state for notification\n      // to the parent window, which is necessary if we\n      // plan to return back to the client after signout\n      // and so we can close the popup after signout\n      state: url == null ? void 0 : {},\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint from a popup window.\n   * It is recommend to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signoutPopupCallback\");\n    await this._popupNavigator.callback(url, { keepOpen });\n    logger2.info(\"success\");\n  }\n  async _signout(args, handle) {\n    const navResponse = await this._signoutStart(args, handle);\n    return await this._signoutEnd(navResponse.url);\n  }\n  async _signoutStart(args = {}, handle) {\n    var _a;\n    const logger2 = this._logger.create(\"_signoutStart\");\n    try {\n      const user = await this._loadUser();\n      logger2.debug(\"loaded current user from storage\");\n      if (this.settings.revokeTokensOnSignout) {\n        await this._revokeInternal(user);\n      }\n      const id_token = args.id_token_hint || user && user.id_token;\n      if (id_token) {\n        logger2.debug(\"setting id_token_hint in signout request\");\n        args.id_token_hint = id_token;\n      }\n      await this.removeUser();\n      logger2.debug(\"user removed, creating signout request\");\n      const signoutRequest = await this._client.createSignoutRequest(args);\n      logger2.debug(\"got signout request\");\n      return await handle.navigate({\n        url: signoutRequest.url,\n        state: (_a = signoutRequest.state) == null ? void 0 : _a.id,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signoutEnd(url) {\n    const logger2 = this._logger.create(\"_signoutEnd\");\n    const signoutResponse = await this._client.processSignoutResponse(url);\n    logger2.debug(\"got signout response\");\n    return signoutResponse;\n  }\n  /**\n   * Trigger a silent request (via an iframe) to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutSilent(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signoutSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const id_token_hint = this.settings.includeIdTokenInSilentSignout ? (_a = await this._loadUser()) == null ? void 0 : _a.id_token : void 0;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    await this._signout({\n      request_type: \"so:s\",\n      post_logout_redirect_uri: url,\n      id_token_hint,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Notify the parent window of response (callback) from the end session endpoint.\n   * It is recommend to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  async revokeTokens(types) {\n    const user = await this._loadUser();\n    await this._revokeInternal(user, types);\n  }\n  async _revokeInternal(user, types = this.settings.revokeTokenTypes) {\n    const logger2 = this._logger.create(\"_revokeInternal\");\n    if (!user)\n      return;\n    const typesPresent = types.filter((type) => typeof user[type] === \"string\");\n    if (!typesPresent.length) {\n      logger2.debug(\"no need to revoke due to no token(s)\");\n      return;\n    }\n    for (const type of typesPresent) {\n      await this._client.revokeToken(\n        user[type],\n        // eslint-disable-line @typescript-eslint/no-non-null-assertion\n        type\n      );\n      logger2.info(`${type} revoked successfully`);\n      if (type !== \"access_token\") {\n        user[type] = null;\n      }\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n  }\n  /**\n   * Enables silent renew for the `UserManager`.\n   */\n  startSilentRenew() {\n    this._logger.create(\"startSilentRenew\");\n    void this._silentRenewService.start();\n  }\n  /**\n   * Disables silent renew for the `UserManager`.\n   */\n  stopSilentRenew() {\n    this._silentRenewService.stop();\n  }\n  get _userStoreKey() {\n    return `user:${this.settings.authority}:${this.settings.client_id}`;\n  }\n  async _loadUser() {\n    const logger2 = this._logger.create(\"_loadUser\");\n    const storageString = await this.settings.userStore.get(this._userStoreKey);\n    if (storageString) {\n      logger2.debug(\"user storageString loaded\");\n      return User.fromStorageString(storageString);\n    }\n    logger2.debug(\"no user storageString\");\n    return null;\n  }\n  async storeUser(user) {\n    const logger2 = this._logger.create(\"storeUser\");\n    if (user) {\n      logger2.debug(\"storing user\");\n      const storageString = user.toStorageString();\n      await this.settings.userStore.set(this._userStoreKey, storageString);\n    } else {\n      this._logger.debug(\"removing user\");\n      await this.settings.userStore.remove(this._userStoreKey);\n    }\n  }\n  /**\n   * Removes stale state entries in storage for incomplete authorize requests.\n   */\n  async clearStaleState() {\n    await this._client.clearStaleState();\n  }\n};\n\n// package.json\nvar version = \"3.0.1\";\n\n// src/Version.ts\nvar Version = version;\nexport {\n  AccessTokenEvents,\n  CheckSessionIFrame,\n  ErrorResponse,\n  ErrorTimeout,\n  InMemoryWebStorage,\n  Log,\n  Logger,\n  MetadataService,\n  OidcClient,\n  OidcClientSettingsStore,\n  SessionMonitor,\n  SigninResponse,\n  SigninState,\n  SignoutResponse,\n  State,\n  User,\n  UserManager,\n  UserManagerSettingsStore,\n  Version,\n  WebStorageStateStore\n};\n//# sourceMappingURL=oidc-client-ts.js.map\n","import BrowserStorage from \"../browser-store\";\r\nimport Utils from \"../utils\";\r\nimport Auth from \"./index\";\r\n\r\nimport { UserManager } from 'oidc-client-ts';\r\n\r\nexport default class OIDC extends Auth {\r\n\r\n  constructor(options, changeListener, router) {\r\n    super(options, changeListener, router);\r\n\r\n    const oidcConfig = {\r\n      authority: options.openIdConnectUrl.replace('/.well-known/openid-configuration', ''),\r\n      client_id: 'stac-browser',\r\n      post_logout_redirect_uri: this.getRedirectUri('/auth/logout'),\r\n      redirect_uri: this.getRedirectUri('/auth'),\r\n      automaticSilentRenew: true\r\n    };\r\n    this.manager = new UserManager(Object.assign(oidcConfig, options.oidcConfig));\r\n    this.manager.events.addAccessTokenExpired(() => changeListener(false));\r\n    this.manager.events.addUserUnloaded(() => changeListener(false));\r\n    this.user = null;\r\n    this.browserStorage = new BrowserStorage();\r\n  }\r\n\r\n  setOriginalUri() {\r\n    this.browserStorage.set('oidc-original-uri', this.router?.currentRoute?.fullPath || window.location.href);\r\n  }\r\n\r\n  restoreOriginalUri() {\r\n    const originalUri = this.browserStorage.get('oidc-original-uri');\r\n    if (this.router && originalUri) {\r\n      this.router.replace(originalUri);\r\n    }\r\n    this.browserStorage.remove('oidc-original-uri');\r\n  }\r\n\r\n  getRedirectUri(appPath) {\r\n    let base = this.router.options.base;\r\n    let path = this.router.resolve(appPath).href;\r\n    if (base.endsWith('/') && path.startsWith('/')) {\r\n      base = base.substring(0, base.length - 1);\r\n    }\r\n    return window.location.origin + base + path;\r\n  }\r\n\r\n  async close() {\r\n    await this.manager.removeUser();\r\n    await this.manager.clearStaleState();\r\n  }\r\n\r\n  async login() {\r\n    this.setOriginalUri();\r\n    await this.manager.signinRedirect();\r\n    return null;\r\n  }\r\n\r\n  async confirmLogin() {\r\n    this.user = await this.manager.signinRedirectCallback();\r\n    await this.changeListener(true, this.user.access_token);\r\n    this.restoreOriginalUri();\r\n  }\r\n\r\n  async logout() {\r\n    await this.manager.signoutRedirect();\r\n  }\r\n\r\n  async confirmLogout() {\r\n    await this.manager.signoutRedirectCallback();\r\n    await this.changeListener(false);\r\n    this.user = null;\r\n  }\r\n\r\n  updateStore(value) {\r\n    if (value) {\r\n      if (typeof this.options.formatter === 'function') {\r\n        value = this.options.formatter(value);\r\n      }\r\n      else {\r\n        value = `Bearer ${value}`;\r\n      }\r\n    }\r\n    if (!Utils.hasText(value)) {\r\n      value = undefined;\r\n    }\r\n\r\n    return {\r\n      header: { key: 'Authorization', value }\r\n    };\r\n  }\r\n\r\n}\r\n"],"names":["InvalidTokenError","Error","b64DecodeUnicode","str","decodeURIComponent","atob","replace","m","p","code","charCodeAt","toString","toUpperCase","length","base64UrlDecode","output","err","jwtDecode","token","options","pos","header","part","split","decoded","e","message","JSON","parse","prototype","name","level","logger","nopLogger","debug","info","warn","error","Log","Log2","reset","setLevel","value","setLogger","Logger","_Logger","constructor","_name","this","args","_format","_method","create","method","methodLogger","Object","createStatic","staticMethod","staticLogger","prefix","UUID_V4_TEMPLATE","toBase64","val","btoa","Uint8Array","map","chr","String","fromCharCode","join","CryptoUtils","_CryptoUtils","_randomWord","arr","Uint32Array","crypto","getRandomValues","generateUUIDv4","uuid","c","generateCodeVerifier","generateCodeChallenge","code_verifier","subtle","encoder","TextEncoder","data","encode","hashed","digest","generateBasicAuth","client_id","client_secret","Event","_logger","_callbacks","addHandler","cb","push","removeHandler","idx","lastIndexOf","splice","raise","ev","JwtUtils","decode","PopupUtils","center","features","_a","width","find","window","outerWidth","left","Math","max","round","screenX","height","top","screenY","outerHeight","serialize","entries","filter","key","Timer","_Timer","super","arguments","_timerHandle","_expiration","_callback","diff","getEpochTime","cancel","floor","Date","now","init","durationInSeconds","logger2","expiration","timerDurationInSeconds","min","setInterval","clearInterval","UrlUtils","readParams","url","responseMode","TypeError","parsedUrl","URL","params","URLSearchParams","slice","URL_STATE_DELIMITER","ErrorResponse","form","_b","_c","error_description","error_uri","state","userState","session_state","url_state","ErrorTimeout","AccessTokenEvents","_expiringTimer","_expiredTimer","_expiringNotificationTimeInSeconds","expiringNotificationTimeInSeconds","load","container","access_token","expires_in","duration","expiring","expired","unload","addAccessTokenExpiring","removeAccessTokenExpiring","addAccessTokenExpired","removeAccessTokenExpired","CheckSessionIFrame","_client_id","_intervalInSeconds","_stopOnError","_timer","_session_state","_message","origin","_frame_origin","source","_frame","contentWindow","stop","document","createElement","style","visibility","position","src","href","Promise","resolve","onload","body","appendChild","addEventListener","start","send","postMessage","InMemoryWebStorage","_data","clear","getItem","setItem","removeItem","getOwnPropertyNames","index","JsonService","additionalContentTypes","_jwtHandler","_extraHeaders","_contentTypes","fetchWithTimeout","input","timeoutInSeconds","initFetch","fetch","controller","AbortController","timeoutId","setTimeout","abort","response","signal","DOMException","clearTimeout","getJson","credentials","headers","appendExtraHeaders","status","contentType","get","item","startsWith","throw","ok","text","json","statusText","stringify","postForm","basicAuth","initCredentials","responseText","customKeys","keys","protectedHeaders","forEach","headerName","includes","toLocaleLowerCase","content","MetadataService","_settings","_signingKeys","_metadata","_metadataUrl","metadataUrl","_jsonService","extraHeaders","signingKeys","metadata","fetchRequestCredentials","_fetchRequestCredentials","resetSigningKeys","getMetadata","assign","metadataSeed","getIssuer","_getMetadataProperty","getAuthorizationEndpoint","getUserInfoEndpoint","getTokenEndpoint","optional","getCheckSessionIframe","getEndSessionEndpoint","getRevocationEndpoint","getKeysEndpoint","getSigningKeys","jwks_uri","keySet","Array","isArray","WebStorageStateStore","store","localStorage","_store","_prefix","set","remove","getAllKeys","len","indexOf","substr","DefaultResponseType","DefaultScope","DefaultClientAuthentication","DefaultStaleStateAgeInSeconds","OidcClientSettingsStore","authority","response_type","scope","redirect_uri","post_logout_redirect_uri","client_authentication","prompt","display","max_age","ui_locales","acr_values","resource","response_mode","filterProtocolClaims","loadUserInfo","staleStateAgeInSeconds","mergeClaimsStrategy","array","disablePKCE","stateStore","revokeTokenAdditionalContentTypes","refreshTokenAllowedScope","extraQueryParams","extraTokenParams","endsWith","UserInfoService","_metadataService","_getClaimsFromJwt","async","payload","getClaims","claims","TokenClient","exchangeCode","grant_type","append","exchangeCredentials","exchangeRefreshToken","refresh_token","param","revoke","token_type_hint","ResponseValidator","_claimsService","_userInfoService","_tokenClient","validateSigninResponse","_processSigninState","_processCode","isOpenId","_validateIdTokenAttributes","_processClaims","skipUserInfo","validateCredentialsResponse","id_token","validateRefreshResponse","profile","hasIdToken","validateSignoutResponse","id","validateSub","sub","mergeClaims","tokenResponse","existingToken","incoming","existing","auth_time","azp","State","_State","created","request_type","toStorageString","fromStorageString","storageString","clearStaleState","storage","age","cutoff","i","SigninState","_SigninState","code_challenge","_SigninRequest","state_data","nonce","optionalParams","searchParams","stateParam","resources","r","SigninRequest","OidcScope","SigninResponse","token_type","splitState","expires_at","Number","SignoutRequest","id_token_hint","SignoutResponse","DefaultProtocolClaims","InternalRequiredProtocolClaims","ClaimsService","result","protocolClaims","claim","claims1","claims2","values","mergedValues","OidcClient","settings","metadataService","_validator","createSigninRequest","request","request_uri","login_hint","signinRequest","signinState","readSigninResponseState","removeState","storedStateString","processSigninResponse","processResourceOwnerPasswordCredentials","username","password","signinResponse","useRefreshToken","allowableScopes","providedScopes","s","createSignoutRequest","signoutState","readSignoutResponseState","processSignoutResponse","revokeToken","type","SessionMonitor","_userManager","_start","user","_sub","_checkSessionIFrame","intervalInSeconds","checkSessionIntervalInSeconds","stopOnError","stopCheckSessionOnError","checkSessionIFrame","_stop","monitorAnonymousSession","timerHandle","session","querySessionStatus","tmpUser","raiseEvent","events","_raiseUserSessionChanged","_raiseUserSignedOut","_raiseUserSignedIn","addUserLoaded","addUserUnloaded","_init","catch","getUser","User","_User","scopes","messageSource","AbstractChildWindow","_abort","_disposeHandlers","Set","_window","navigate","location","keepOpen","reject","listener","scriptOrigin","_dispose","add","removeEventListener","reason","close","dispose","_notifyParent","parent","targetOrigin","DefaultPopupWindowFeatures","toolbar","closePopupWindowAfterInSeconds","DefaultPopupTarget","DefaultAccessTokenExpiringNotificationTimeInSeconds","DefaultCheckSessionIntervalInSeconds","DefaultSilentRequestTimeoutInSeconds","UserManagerSettingsStore","popup_redirect_uri","popup_post_logout_redirect_uri","popupWindowFeatures","popupWindowTarget","redirectMethod","redirectTarget","iframeNotifyParentOrigin","iframeScriptOrigin","silent_redirect_uri","silentRequestTimeoutInSeconds","automaticSilentRenew","validateSubOnSilentRenew","includeIdTokenInSilentRenew","monitorSession","query_status_response_type","revokeTokenTypes","revokeTokensOnSignout","includeIdTokenInSilentSignout","accessTokenExpiringNotificationTimeInSeconds","userStore","sessionStorage","IFrameWindow","_IFrameWindow","_timeoutInSeconds","createHiddenIframe","iframe","timer","parentNode","_a2","frame","target","removeChild","notifyParent","IFrameNavigator","prepare","callback","checkForPopupClosedInterval","second","PopupWindow","centeredPopup","open","closed","focus","popupClosedInterval","notifyOpener","opener","PopupNavigator","RedirectNavigator","targetWindow","self","redirect","bind","promise","UserManagerEvents","_userLoaded","_userUnloaded","_silentRenewError","_userSignedIn","_userSignedOut","_userSessionChanged","removeUserLoaded","removeUserUnloaded","addSilentRenewError","removeSilentRenewError","_raiseSilentRenewError","addUserSignedIn","removeUserSignedIn","addUserSignedOut","removeUserSignedOut","addUserSessionChanged","removeUserSessionChanged","SilentRenewService","_isStarted","_retryTimer","_tokenExpiring","signinSilent","RefreshState","UserManager","redirectNavigator","popupNavigator","iframeNavigator","_client","_redirectNavigator","_popupNavigator","_iframeNavigator","_events","_silentRenewService","startSilentRenew","_sessionMonitor","_loadUser","removeUser","storeUser","signinRedirect","requestArgs","handle","_signinStart","signinRedirectCallback","_signinEnd","signinResourceOwnerCredentials","_buildUser","signinPopup","_signin","signinPopupCallback","_useRefreshToken","verifySub","signinSilentCallback","signinCallback","signoutCallback","signoutRedirectCallback","signoutPopupCallback","signoutSilentCallback","navResponse","signoutRedirect","_signoutStart","_signoutEnd","signoutPopup","_signout","_revokeInternal","signoutRequest","signoutResponse","signoutSilent","revokeTokens","types","typesPresent","stopSilentRenew","_userStoreKey","OIDC","Auth","changeListener","router","oidcConfig","openIdConnectUrl","getRedirectUri","manager","browserStorage","BrowserStorage","setOriginalUri","_this$router","_this$router$currentR","currentRoute","fullPath","restoreOriginalUri","originalUri","appPath","base","path","substring","login","confirmLogin","logout","confirmLogout","updateStore","formatter","Utils","hasText","undefined"],"sourceRoot":""}