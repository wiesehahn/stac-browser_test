{"version":3,"file":"js/8052.a94983ec.js","mappings":"0NAEe,SAASA,IACtB,MAAMC,EAAWC,IAAAA,cAGjBA,IAAAA,gBAAuB,IAAIC,KAAKC,aAAa,QAASH,EAASI,wBAE/DH,IAAAA,cAAqB,IAAIC,KAAKG,eAAe,QAASL,EAASM,sBAE/DL,IAAAA,kBAAyB,IAAIC,KAAKG,eAAe,QAAS,CAC1DE,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,SAAU,MACVC,aAAc,SAEhB,C","sources":["webpack://@radiantearth/stac-browser/./src/locales/en/stac-fields.js"],"sourcesContent":["import I18N from '@radiantearth/stac-fields/I18N';\r\n\r\nexport default function run(/*locale*/) {\r\n  const defaults = I18N.getDefaults();\r\n  // We want the globally recommended number format with spaces as thousands separator\r\n  // and a dot as decimal separator, which is available in e.g. fr-FR\r\n  I18N.numberFormatter = new Intl.NumberFormat(\"fr-FR\", defaults.numberFormatterOptions);\r\n  // We want ISO formatting for the date, which is available in e.g. sv-SE\r\n  I18N.dateFormatter = new Intl.DateTimeFormat(\"sv-SE\", defaults.dateFormatterOptions);\r\n  // We want ISO formatting for the date and time, which is available in e.g. sv-SE\r\n  I18N.dateTimeFormatter = new Intl.DateTimeFormat(\"sv-SE\", {\r\n\t\tday: 'numeric',\r\n\t\tmonth: 'numeric',\r\n\t\tyear: 'numeric',\r\n\t\thour: 'numeric',\r\n\t\tminute: 'numeric',\r\n\t\tsecond: 'numeric',\r\n\t\ttimeZone: \"UTC\",\r\n\t\ttimeZoneName: \"short\"\r\n\t});\r\n}\r\n"],"names":["run","defaults","I18N","Intl","NumberFormat","numberFormatterOptions","DateTimeFormat","dateFormatterOptions","day","month","year","hour","minute","second","timeZone","timeZoneName"],"sourceRoot":""}